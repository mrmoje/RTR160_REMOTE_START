

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Aug 16 22:11:47 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  000A                     	;# 
    40  000B                     	;# 
    41  000C                     	;# 
    42  000E                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0015                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  008C                     	;# 
    60  008E                     	;# 
    61  0092                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009A                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009F                     	;# 
    69                           
    70                           	psect	strings
    71  0228                     __pstrings:	
    72  0228                     stringtab:	
    73  0228                     __stringtab:	
    74  0228                     stringcode:	
    75                           ;	String table - string pointers are 1 byte each
    76                           
    77  0228                     stringdir:	
    78  0228  3002               	movlw	high stringdir
    79  0229  008A               	movwf	10
    80  022A  0804               	movf	4,w
    81  022B  0A84               	incf	4,f
    82  022C  0782               	addwf	2,f
    83  022D                     __stringbase:	
    84  022D  3400               	retlw	0
    85  022E                     __end_of__stringtab:	
    86  022E                     _dpowers:	
    87  022E  3401               	retlw	1
    88  022F  3400               	retlw	0
    89  0230  340A               	retlw	10
    90  0231  3400               	retlw	0
    91  0232  3464               	retlw	100
    92  0233  3400               	retlw	0
    93  0234  34E8               	retlw	232
    94  0235  3403               	retlw	3
    95  0236  3410               	retlw	16
    96  0237  3427               	retlw	39
    97  0238                     __end_of_dpowers:	
    98  0005                     _PORTA	set	5
    99  001A                     _RCREG	set	26
   100  0019                     _TXREG	set	25
   101  00C4                     _CREN	set	196
   102  005F                     _GIE	set	95
   103  00C1                     _OERR	set	193
   104  005E                     _PEIE	set	94
   105  0028                     _RA0	set	40
   106  002B                     _RA3	set	43
   107  0035                     _RB5	set	53
   108  0065                     _RCIF	set	101
   109  00C6                     _RX9	set	198
   110  00C7                     _SPEN	set	199
   111  00C5                     _SREN	set	197
   112  005A                     _TMR0IF	set	90
   113  0064                     _TXIF	set	100
   114  0099                     _SPBRG	set	153
   115  04C2                     _BRGH	set	1218
   116  0465                     _RCIE	set	1125
   117  04C4                     _SYNC	set	1220
   118  0428                     _TRISA0	set	1064
   119  0429                     _TRISA1	set	1065
   120  042A                     _TRISA2	set	1066
   121  042B                     _TRISA3	set	1067
   122  0431                     _TRISB1	set	1073
   123  0432                     _TRISB2	set	1074
   124  0433                     _TRISB3	set	1075
   125  0435                     _TRISB5	set	1077
   126  04C6                     _TX9	set	1222
   127  04C5                     _TXEN	set	1221
   128  0464                     _TXIE	set	1124
   129  0238                     __stringdata:	
   130  0238                     STR_4:	
   131  0238  3445               	retlw	69	;'E'
   132  0239  3452               	retlw	82	;'R'
   133  023A  3452               	retlw	82	;'R'
   134  023B  345F               	retlw	95	;'_'
   135  023C  344E               	retlw	78	;'N'
   136  023D  3445               	retlw	69	;'E'
   137  023E  3455               	retlw	85	;'U'
   138  023F  3454               	retlw	84	;'T'
   139  0240  3452               	retlw	82	;'R'
   140  0241  3441               	retlw	65	;'A'
   141  0242  344C               	retlw	76	;'L'
   142  0243  3400               	retlw	0
   143  0244                     STR_1:	
   144  0244  3449               	retlw	73	;'I'
   145  0245  344E               	retlw	78	;'N'
   146  0246  3449               	retlw	73	;'I'
   147  0247  3454               	retlw	84	;'T'
   148  0248  3421               	retlw	33	;'!'
   149  0249  340D               	retlw	13
   150  024A  340A               	retlw	10
   151  024B  3400               	retlw	0
   152  024C                     STR_8:	
   153  024C  3425               	retlw	37	;'%'
   154  024D  3464               	retlw	100	;'d'
   155  024E  340D               	retlw	13
   156  024F  340A               	retlw	10
   157  0250  3400               	retlw	0
   158  0251                     STR_5:	
   159  0251  344B               	retlw	75	;'K'
   160  0252  3459               	retlw	89	;'Y'
   161  0253  344F               	retlw	79	;'O'
   162  0254  3446               	retlw	70	;'F'
   163  0255  3400               	retlw	0
   164  0256                     STR_6:	
   165  0256  3442               	retlw	66	;'B'
   166  0257  345A               	retlw	90	;'Z'
   167  0258  344F               	retlw	79	;'O'
   168  0259  344B               	retlw	75	;'K'
   169  025A  3400               	retlw	0
   170  025B                     STR_2:	
   171  025B  344B               	retlw	75	;'K'
   172  025C  3459               	retlw	89	;'Y'
   173  025D  344F               	retlw	79	;'O'
   174  025E  344E               	retlw	78	;'N'
   175  025F  3400               	retlw	0
   176  0260                     STR_7:	
   177  0260  3442               	retlw	66	;'B'
   178  0261  345A               	retlw	90	;'Z'
   179  0262  3445               	retlw	69	;'E'
   180  0263  3452               	retlw	82	;'R'
   181  0264  3400               	retlw	0
   182  0265                     STR_3:	
   183  0265  3449               	retlw	73	;'I'
   184  0266  3447               	retlw	71	;'G'
   185  0267  344E               	retlw	78	;'N'
   186  0268  3454               	retlw	84	;'T'
   187  0269  3400               	retlw	0
   188  026A                     __end_of__stringdata:	
   189                           
   190                           ; #config settings
   191  0000                     
   192                           	psect	cinit
   193  0011                     start_initialization:	
   194  0011                     __initialization:	
   195                           
   196                           ; Clear objects allocated to BANK0
   197  0011  01CF               	clrf	__pbssBANK0& (0+127)
   198  0012  01D0               	clrf	(__pbssBANK0+1)& (0+127)
   199  0013  01D1               	clrf	(__pbssBANK0+2)& (0+127)
   200  0014  01D2               	clrf	(__pbssBANK0+3)& (0+127)
   201  0015  01D3               	clrf	(__pbssBANK0+4)& (0+127)
   202  0016  01D4               	clrf	(__pbssBANK0+5)& (0+127)
   203  0017  01D5               	clrf	(__pbssBANK0+6)& (0+127)
   204  0018                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  0018                     __end_of__initialization:	
   208  0018  0183               	clrf	3
   209  0019  2C5B               	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssBANK0
   212  004F                     __pbssBANK0:	
   213  004F                     ISR@i:	
   214  004F                     	ds	1
   215  0050                     _sPORTA:	
   216  0050                     	ds	1
   217  0051                     _receive_buffer:	
   218  0051                     	ds	5
   219                           
   220                           	psect	cstackCOMMON
   221  0070                     __pcstackCOMMON:	
   222  0070                     ?_BOARD_init:	
   223  0070                     ?_buzz_ok:	
   224                           ; 0 bytes @ 0x0
   225                           
   226  0070                     ??_USART_getc:	
   227                           ; 0 bytes @ 0x0
   228                           
   229  0070                     ?_isalpha:	
   230                           ; 0 bytes @ 0x0
   231                           
   232  0070                     ?_set_portAbit:	
   233                           ; 1 bit 
   234                           
   235  0070                     ?_buzz_error:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ??_buzz_error:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_isupper:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ??_isupper:	
   245                           ; 1 bit 
   246                           
   247  0070                     ?_main:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_ISR:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_USART_putc:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_putch:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?i1_USART_putc:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ??i1_USART_putc:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?i1_buzz_ok:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ??i1_buzz_ok:	
   269                           ; 0 bytes @ 0x0
   270                           
   271  0070                     ?i1_putch:	
   272                           ; 0 bytes @ 0x0
   273                           
   274  0070                     ?_USART_getc:	
   275                           ; 0 bytes @ 0x0
   276                           
   277  0070                     ?_printf:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_strcmp:	
   281                           ; 2 bytes @ 0x0
   282                           
   283  0070                     ?i1___lwdiv:	
   284                           ; 2 bytes @ 0x0
   285                           
   286  0070                     set_portAbit@val:	
   287                           ; 2 bytes @ 0x0
   288                           
   289  0070                     _isupper$345:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     strcmp@s2:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     i1USART_putc@Byte:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     i1___lwdiv@divisor:	
   299                           ; 1 bytes @ 0x0
   300                           
   301                           
   302                           ; 2 bytes @ 0x0
   303  0070                     	ds	1
   304  0071                     ??_set_portAbit:	
   305  0071                     ??i1_putch:	
   306                           ; 0 bytes @ 0x1
   307                           
   308  0071                     isupper@c:	
   309                           ; 0 bytes @ 0x1
   310                           
   311  0071                     i1buzz_ok@buzz:	
   312                           ; 1 bytes @ 0x1
   313                           
   314  0071                     i1putch@byte:	
   315                           ; 1 bytes @ 0x1
   316                           
   317                           
   318                           ; 1 bytes @ 0x1
   319  0071                     	ds	1
   320  0072                     ??_isalpha:	
   321  0072                     ??_strcmp:	
   322                           ; 0 bytes @ 0x2
   323                           
   324  0072                     buzz_error@buzz:	
   325                           ; 0 bytes @ 0x2
   326                           
   327  0072                     _isalpha$342:	
   328                           ; 1 bytes @ 0x2
   329                           
   330  0072                     i1___lwdiv@dividend:	
   331                           ; 1 bytes @ 0x2
   332                           
   333                           
   334                           ; 2 bytes @ 0x2
   335  0072                     	ds	1
   336  0073                     set_portAbit@bt:	
   337  0073                     isalpha@c:	
   338                           ; 1 bytes @ 0x3
   339                           
   340                           
   341                           ; 1 bytes @ 0x3
   342  0073                     	ds	1
   343  0074                     ??i1___lwdiv:	
   344  0074                     strcmp@r:	
   345                           ; 0 bytes @ 0x4
   346                           
   347                           
   348                           ; 1 bytes @ 0x4
   349  0074                     	ds	1
   350  0075                     strcmp@s1:	
   351  0075                     i1___lwdiv@quotient:	
   352                           ; 1 bytes @ 0x5
   353                           
   354                           
   355                           ; 2 bytes @ 0x5
   356  0075                     	ds	2
   357  0077                     i1___lwdiv@counter:	
   358                           
   359                           ; 1 bytes @ 0x7
   360  0077                     	ds	1
   361  0078                     ?i1___lwmod:	
   362  0078                     i1___lwmod@divisor:	
   363                           ; 2 bytes @ 0x8
   364                           
   365                           
   366                           ; 2 bytes @ 0x8
   367  0078                     	ds	2
   368  007A                     i1___lwmod@dividend:	
   369                           
   370                           ; 2 bytes @ 0xA
   371  007A                     	ds	2
   372  007C                     ??i1___lwmod:	
   373                           
   374                           ; 0 bytes @ 0xC
   375  007C                     	ds	1
   376  007D                     i1___lwmod@counter:	
   377                           
   378                           ; 1 bytes @ 0xD
   379  007D                     	ds	1
   380                           
   381                           	psect	cstackBANK0
   382  0020                     __pcstackBANK0:	
   383  0020                     ?i1_printf:	
   384                           
   385                           ; 2 bytes @ 0x0
   386  0020                     	ds	1
   387  0021                     ??i1_printf:	
   388                           
   389                           ; 0 bytes @ 0x1
   390  0021                     	ds	3
   391  0024                     i1printf@f:	
   392                           
   393                           ; 1 bytes @ 0x4
   394  0024                     	ds	1
   395  0025                     i1printf@ap:	
   396                           
   397                           ; 1 bytes @ 0x5
   398  0025                     	ds	1
   399  0026                     i1printf@flag:	
   400                           
   401                           ; 1 bytes @ 0x6
   402  0026                     	ds	1
   403  0027                     i1printf@prec:	
   404                           
   405                           ; 1 bytes @ 0x7
   406  0027                     	ds	1
   407  0028                     i1printf@_val:	
   408                           
   409                           ; 4 bytes @ 0x8
   410  0028                     	ds	4
   411  002C                     i1printf@c:	
   412                           
   413                           ; 1 bytes @ 0xC
   414  002C                     	ds	1
   415  002D                     ??_ISR:	
   416                           
   417                           ; 0 bytes @ 0xD
   418  002D                     	ds	7
   419  0034                     ISR@b:	
   420                           
   421                           ; 1 bytes @ 0x14
   422  0034                     	ds	1
   423  0035                     ??_BOARD_init:	
   424  0035                     ??_buzz_ok:	
   425                           ; 0 bytes @ 0x15
   426                           
   427  0035                     ??_USART_putc:	
   428                           ; 0 bytes @ 0x15
   429                           
   430  0035                     ?___lwdiv:	
   431                           ; 0 bytes @ 0x15
   432                           
   433  0035                     USART_putc@Byte:	
   434                           ; 2 bytes @ 0x15
   435                           
   436  0035                     ___lwdiv@divisor:	
   437                           ; 1 bytes @ 0x15
   438                           
   439                           
   440                           ; 2 bytes @ 0x15
   441  0035                     	ds	1
   442  0036                     ??_putch:	
   443  0036                     buzz_ok@buzz:	
   444                           ; 0 bytes @ 0x16
   445                           
   446  0036                     putch@byte:	
   447                           ; 1 bytes @ 0x16
   448                           
   449                           
   450                           ; 1 bytes @ 0x16
   451  0036                     	ds	1
   452  0037                     ___lwdiv@dividend:	
   453                           
   454                           ; 2 bytes @ 0x17
   455  0037                     	ds	2
   456  0039                     ??___lwdiv:	
   457                           
   458                           ; 0 bytes @ 0x19
   459  0039                     	ds	1
   460  003A                     ___lwdiv@quotient:	
   461                           
   462                           ; 2 bytes @ 0x1A
   463  003A                     	ds	2
   464  003C                     ___lwdiv@counter:	
   465                           
   466                           ; 1 bytes @ 0x1C
   467  003C                     	ds	1
   468  003D                     ?___lwmod:	
   469  003D                     ___lwmod@divisor:	
   470                           ; 2 bytes @ 0x1D
   471                           
   472                           
   473                           ; 2 bytes @ 0x1D
   474  003D                     	ds	2
   475  003F                     ___lwmod@dividend:	
   476                           
   477                           ; 2 bytes @ 0x1F
   478  003F                     	ds	2
   479  0041                     ??___lwmod:	
   480                           
   481                           ; 0 bytes @ 0x21
   482  0041                     	ds	1
   483  0042                     ___lwmod@counter:	
   484                           
   485                           ; 1 bytes @ 0x22
   486  0042                     	ds	1
   487  0043                     ??_printf:	
   488                           
   489                           ; 0 bytes @ 0x23
   490  0043                     	ds	3
   491  0046                     printf@ap:	
   492                           
   493                           ; 1 bytes @ 0x26
   494  0046                     	ds	1
   495  0047                     printf@flag:	
   496                           
   497                           ; 1 bytes @ 0x27
   498  0047                     	ds	1
   499  0048                     printf@prec:	
   500                           
   501                           ; 1 bytes @ 0x28
   502  0048                     	ds	1
   503  0049                     printf@f:	
   504                           
   505                           ; 1 bytes @ 0x29
   506  0049                     	ds	1
   507  004A                     printf@_val:	
   508                           
   509                           ; 4 bytes @ 0x2A
   510  004A                     	ds	4
   511  004E                     printf@c:	
   512                           
   513                           ; 1 bytes @ 0x2E
   514  004E                     	ds	1
   515  004F                     ??_main:	
   516                           
   517                           	psect	maintext
   518  045B                     __pmaintext:	
   519                           ; 0 bytes @ 0x2F
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 59 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;		None               void
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 17F/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   539 ;;      Params:         0       0       0       0
   540 ;;      Locals:         0       0       0       0
   541 ;;      Temps:          0       0       0       0
   542 ;;      Totals:         0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels required when called:    7
   545 ;; This function calls:
   546 ;;		_BOARD_init
   547 ;;		_buzz_ok
   548 ;;		_printf
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           
   555                           ;psect for function _main
   556  045B                     _main:	
   557                           
   558                           ;main.c: 61: BOARD_init();
   559                           
   560                           ;incstack = 0
   561                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   562  045B  23D4               	fcall	_BOARD_init
   563                           
   564                           ;main.c: 62: printf("INIT!\r\n");
   565  045C  3017               	movlw	(STR_1-__stringbase)& (0+255)
   566  045D  20E2               	fcall	_printf
   567                           
   568                           ;main.c: 63: buzz_ok();
   569  045E  23F6               	fcall	_buzz_ok
   570  045F                     l87:	
   571                           ;main.c: 64: while(1);
   572                           
   573  045F  2C5F               	goto	l87
   574  0460                     __end_of_main:	
   575                           
   576                           	psect	text1
   577  00E2                     __ptext1:	
   578 ;; *************** function _printf *****************
   579 ;; Defined at:
   580 ;;		line 464 in file "/opt/microchip/xc8/v1.32/sources/common/doprnt.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;  f               1    wreg     PTR const unsigned char 
   583 ;;		 -> STR_8(5), STR_4(12), STR_1(8), 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  f               1   41[BANK0 ] PTR const unsigned char 
   586 ;;		 -> STR_8(5), STR_4(12), STR_1(8), 
   587 ;;  _val            4   42[BANK0 ] struct .
   588 ;;  c               1   46[BANK0 ] char 
   589 ;;  prec            1   40[BANK0 ] char 
   590 ;;  flag            1   39[BANK0 ] unsigned char 
   591 ;;  ap              1   38[BANK0 ] PTR void [1]
   592 ;;		 -> ?i1_printf(2), ?_printf(2), 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2    4[COMMON] int 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   602 ;;      Params:         0       0       0       0
   603 ;;      Locals:         0       9       0       0
   604 ;;      Temps:          0       3       0       0
   605 ;;      Totals:         0      12       0       0
   606 ;;Total ram usage:       12 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    6
   609 ;; This function calls:
   610 ;;		___lwdiv
   611 ;;		___lwmod
   612 ;;		_putch
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _printf
   620  00E2                     _printf:	
   621                           
   622                           ;incstack = 0
   623                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   624                           ;printf@f stored from wreg
   625  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   626  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   627  00E4  00C9               	movwf	printf@f
   628                           
   629                           ;doprnt.c: 466: va_list ap;
   630                           ;doprnt.c: 499: signed char c;
   631                           ;doprnt.c: 506: signed char prec;
   632                           ;doprnt.c: 508: unsigned char flag;
   633                           ;doprnt.c: 527: union {
   634                           ;doprnt.c: 528: unsigned int _val;
   635                           ;doprnt.c: 529: struct {
   636                           ;doprnt.c: 530: const char * _cp;
   637                           ;doprnt.c: 531: unsigned _len;
   638                           ;doprnt.c: 532: } _str;
   639                           ;doprnt.c: 533: } _val;
   640                           ;doprnt.c: 542: *ap = __va_start();
   641  00E5  3070               	movlw	?_printf& (0+255)
   642  00E6  00C3               	movwf	??_printf
   643  00E7  0843               	movf	??_printf,w
   644  00E8  00C6               	movwf	printf@ap
   645  00E9                     l1278:	
   646                           ;doprnt.c: 545: while(c = *f++) {
   647                           
   648  00E9  3001               	movlw	1
   649  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   650  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   651  00EC  07C9               	addwf	printf@f,f
   652  00ED  30FF               	movlw	-1
   653  00EE  0749               	addwf	printf@f,w
   654  00EF  0084               	movwf	4
   655  00F0  2228               	fcall	stringdir
   656  00F1  00C3               	movwf	??_printf
   657  00F2  0843               	movf	??_printf,w
   658  00F3  00CE               	movwf	printf@c
   659  00F4  08CE               	movf	printf@c,f
   660  00F5  1903               	btfsc	3,2
   661  00F6  0008               	return
   662                           
   663                           ;doprnt.c: 547: if(c != '%')
   664  00F7  084E               	movf	printf@c,w
   665  00F8  3A25               	xorlw	37
   666  00F9  1903               	skipnz
   667  00FA  28FE               	goto	l1238
   668                           
   669                           ;doprnt.c: 549: {
   670                           ;doprnt.c: 550: (putch(c) );
   671  00FB  084E               	movf	printf@c,w
   672  00FC  2455               	fcall	_putch
   673                           
   674                           ;doprnt.c: 551: continue;
   675  00FD  28E9               	goto	l1278
   676  00FE                     l1238:	
   677                           
   678                           ;doprnt.c: 552: }
   679                           ;doprnt.c: 557: flag = 0;
   680  00FE  1283               	bcf	3,5	;RP0=0, select bank0
   681  00FF  1303               	bcf	3,6	;RP1=0, select bank0
   682  0100  01C7               	clrf	printf@flag
   683                           
   684                           ;doprnt.c: 831: }
   685                           
   686                           ;doprnt.c: 822: continue;
   687                           
   688                           ;doprnt.c: 811: default:
   689                           
   690                           ;doprnt.c: 707: case 'i':
   691                           ;doprnt.c: 708: break;
   692                           
   693                           ;doprnt.c: 706: case 'd':
   694                           
   695                           ;doprnt.c: 647: goto alldone;
   696                           
   697                           ;doprnt.c: 646: case 0:
   698                           
   699                           ;doprnt.c: 644: switch(c = *f++) {
   700  0101  3001               	movlw	1
   701  0102  07C9               	addwf	printf@f,f
   702  0103  30FF               	movlw	-1
   703  0104  0749               	addwf	printf@f,w
   704  0105  0084               	movwf	4
   705  0106  2228               	fcall	stringdir
   706  0107  00CE               	movwf	printf@c
   707                           
   708                           ; Switch size 1, requested type "space"
   709                           ; Number of cases is 3, Range of values is 0 to 105
   710                           ; switch strategies available:
   711                           ; Name         Instructions Cycles
   712                           ; simple_byte           10     6 (average)
   713                           ; direct_byte          112     6 (fixed)
   714                           ; jumptable            260     6 (fixed)
   715                           ;	Chosen strategy is simple_byte
   716  0108  3A00               	xorlw	0	; case 0
   717  0109  1903               	skipnz
   718  010A  2985               	goto	l177
   719  010B  3A64               	xorlw	100	; case 100
   720  010C  1903               	skipnz
   721  010D  2912               	goto	l1244
   722  010E  3A0D               	xorlw	13	; case 105
   723  010F  1903               	skipnz
   724  0110  2912               	goto	l1244
   725  0111  28E9               	goto	l1278
   726  0112                     l1244:	
   727                           
   728                           ;doprnt.c: 1262: {
   729                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   730  0112  0846               	movf	printf@ap,w
   731  0113  0084               	movwf	4
   732  0114  1383               	bcf	3,7	;select IRP bank0
   733  0115  0800               	movf	0,w
   734  0116  00CA               	movwf	printf@_val
   735  0117  0A84               	incf	4,f
   736  0118  0800               	movf	0,w
   737  0119  00CB               	movwf	printf@_val+1
   738  011A  3002               	movlw	2
   739  011B  00C3               	movwf	??_printf
   740  011C  0843               	movf	??_printf,w
   741  011D  07C6               	addwf	printf@ap,f
   742                           
   743                           ;doprnt.c: 1270: if((int)_val._val < 0) {
   744  011E  1FCB               	btfss	printf@_val+1,7
   745  011F  2929               	goto	l1254
   746                           
   747                           ;doprnt.c: 1271: flag |= 0x03;
   748  0120  3003               	movlw	3
   749  0121  00C3               	movwf	??_printf
   750  0122  0843               	movf	??_printf,w
   751  0123  04C7               	iorwf	printf@flag,f
   752                           
   753                           ;doprnt.c: 1272: _val._val = -_val._val;
   754  0124  09CA               	comf	printf@_val,f
   755  0125  09CB               	comf	printf@_val+1,f
   756  0126  0ACA               	incf	printf@_val,f
   757  0127  1903               	skipnz
   758  0128  0ACB               	incf	printf@_val+1,f
   759  0129                     l1254:	
   760                           
   761                           ;doprnt.c: 1273: }
   762                           ;doprnt.c: 1275: }
   763                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   764  0129  01CE               	clrf	printf@c
   765  012A  0ACE               	incf	printf@c,f
   766  012B  084E               	movf	printf@c,w
   767  012C  3A05               	xorlw	5
   768  012D  1903               	btfsc	3,2
   769  012E  2948               	goto	l1266
   770  012F                     l1258:	
   771                           
   772                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
   773  012F  084E               	movf	printf@c,w
   774  0130  00C3               	movwf	??_printf
   775  0131  0743               	addwf	??_printf,w
   776  0132  3E01               	addlw	low (_dpowers-__stringbase)
   777  0133  0084               	movwf	4
   778  0134  2228               	fcall	stringdir
   779  0135  00C4               	movwf	??_printf+1
   780  0136  2228               	fcall	stringdir
   781  0137  00C5               	movwf	??_printf+2
   782  0138  0845               	movf	??_printf+2,w
   783  0139  024B               	subwf	printf@_val+1,w
   784  013A  1D03               	skipz
   785  013B  293E               	goto	u1055
   786  013C  0844               	movf	??_printf+1,w
   787  013D  024A               	subwf	printf@_val,w
   788  013E                     u1055:	
   789  013E  1C03               	btfss	3,0
   790  013F  2948               	goto	l1266
   791                           
   792                           ;doprnt.c: 1316: break;
   793  0140  3001               	movlw	1
   794  0141  00C3               	movwf	??_printf
   795  0142  0843               	movf	??_printf,w
   796  0143  07CE               	addwf	printf@c,f
   797  0144  084E               	movf	printf@c,w
   798  0145  3A05               	xorlw	5
   799  0146  1D03               	skipz
   800  0147  292F               	goto	l1258
   801  0148                     l1266:	
   802                           
   803                           ;doprnt.c: 1431: {
   804                           ;doprnt.c: 1447: if(flag & 0x03)
   805  0148  0847               	movf	printf@flag,w
   806  0149  3903               	andlw	3
   807  014A  1903               	btfsc	3,2
   808  014B  294E               	goto	l1270
   809                           
   810                           ;doprnt.c: 1448: (putch('-') );
   811  014C  302D               	movlw	45
   812  014D  2455               	fcall	_putch
   813  014E                     l1270:	
   814                           
   815                           ;doprnt.c: 1478: }
   816                           ;doprnt.c: 1481: prec = c;
   817  014E  1283               	bcf	3,5	;RP0=0, select bank0
   818  014F  1303               	bcf	3,6	;RP1=0, select bank0
   819  0150  084E               	movf	printf@c,w
   820  0151  00C3               	movwf	??_printf
   821  0152  0843               	movf	??_printf,w
   822  0153  00C8               	movwf	printf@prec
   823  0154                     l1276:	
   824                           ;doprnt.c: 1483: while(prec--) {
   825                           
   826  0154  30FF               	movlw	-1
   827  0155  1283               	bcf	3,5	;RP0=0, select bank0
   828  0156  1303               	bcf	3,6	;RP1=0, select bank0
   829  0157  00C3               	movwf	??_printf
   830  0158  0843               	movf	??_printf,w
   831  0159  07C8               	addwf	printf@prec,f
   832  015A  0848               	movf	printf@prec,w
   833  015B  3AFF               	xorlw	-1
   834  015C  1903               	btfsc	3,2
   835  015D  28E9               	goto	l1278
   836                           
   837                           ;doprnt.c: 1487: {
   838                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
   839  015E  300A               	movlw	10
   840  015F  00BD               	movwf	___lwmod@divisor
   841  0160  3000               	movlw	0
   842  0161  00BE               	movwf	___lwmod@divisor+1
   843  0162  0848               	movf	printf@prec,w
   844  0163  00C3               	movwf	??_printf
   845  0164  0743               	addwf	??_printf,w
   846  0165  3E01               	addlw	low (_dpowers-__stringbase)
   847  0166  0084               	movwf	4
   848  0167  2228               	fcall	stringdir
   849  0168  00B5               	movwf	___lwdiv@divisor
   850  0169  2228               	fcall	stringdir
   851  016A  00B6               	movwf	___lwdiv@divisor+1
   852  016B  084B               	movf	printf@_val+1,w
   853  016C  01B8               	clrf	___lwdiv@dividend+1
   854  016D  07B8               	addwf	___lwdiv@dividend+1,f
   855  016E  084A               	movf	printf@_val,w
   856  016F  01B7               	clrf	___lwdiv@dividend
   857  0170  07B7               	addwf	___lwdiv@dividend,f
   858  0171  226A               	fcall	___lwdiv
   859  0172  1283               	bcf	3,5	;RP0=0, select bank0
   860  0173  1303               	bcf	3,6	;RP1=0, select bank0
   861  0174  0836               	movf	?___lwdiv+1,w
   862  0175  01C0               	clrf	___lwmod@dividend+1
   863  0176  07C0               	addwf	___lwmod@dividend+1,f
   864  0177  0835               	movf	?___lwdiv,w
   865  0178  01BF               	clrf	___lwmod@dividend
   866  0179  07BF               	addwf	___lwmod@dividend,f
   867  017A  22E8               	fcall	___lwmod
   868  017B  1283               	bcf	3,5	;RP0=0, select bank0
   869  017C  1303               	bcf	3,6	;RP1=0, select bank0
   870  017D  083D               	movf	?___lwmod,w
   871  017E  3E30               	addlw	48
   872  017F  00C4               	movwf	??_printf+1
   873  0180  0844               	movf	??_printf+1,w
   874  0181  00CE               	movwf	printf@c
   875                           
   876                           ;doprnt.c: 1532: }
   877                           ;doprnt.c: 1533: (putch(c) );
   878  0182  084E               	movf	printf@c,w
   879  0183  2455               	fcall	_putch
   880  0184  2954               	goto	l1276
   881  0185                     l177:	
   882                           ;doprnt.c: 1549: return 0;
   883                           ;	Return value of _printf is never used
   884                           
   885                           ;doprnt.c: 1534: }
   886                           ;doprnt.c: 1542: }
   887                           ;doprnt.c: 1544: alldone:
   888                           
   889  0185  0008               	return
   890  0186                     __end_of_printf:	
   891                           
   892                           	psect	text2
   893  0455                     __ptext2:	
   894 ;; *************** function _putch *****************
   895 ;; Defined at:
   896 ;;		line 188 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  byte            1    wreg     unsigned char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  byte            1   22[BANK0 ] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;		None               void
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   910 ;;      Params:         0       0       0       0
   911 ;;      Locals:         0       1       0       0
   912 ;;      Temps:          0       0       0       0
   913 ;;      Totals:         0       1       0       0
   914 ;;Total ram usage:        1 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    5
   917 ;; This function calls:
   918 ;;		_USART_putc
   919 ;; This function is called by:
   920 ;;		_printf
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _putch
   926  0455                     _putch:	
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
   930                           ;putch@byte stored from wreg
   931  0455  1283               	bcf	3,5	;RP0=0, select bank0
   932  0456  1303               	bcf	3,6	;RP1=0, select bank0
   933  0457  00B6               	movwf	putch@byte
   934                           
   935                           ;main.c: 190: USART_putc(byte);
   936  0458  0836               	movf	putch@byte,w
   937  0459  2445               	fcall	_USART_putc
   938  045A  0008               	return
   939  045B                     __end_of_putch:	
   940                           
   941                           	psect	text3
   942  0445                     __ptext3:	
   943 ;; *************** function _USART_putc *****************
   944 ;; Defined at:
   945 ;;		line 143 in file "main.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  Byte            1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  Byte            1   21[BANK0 ] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;		None               void
   952 ;; Registers used:
   953 ;;		wreg
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   959 ;;      Params:         0       0       0       0
   960 ;;      Locals:         0       1       0       0
   961 ;;      Temps:          0       0       0       0
   962 ;;      Totals:         0       1       0       0
   963 ;;Total ram usage:        1 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    4
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_putch
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function _USART_putc
   975  0445                     _USART_putc:	
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in _USART_putc: [wreg]
   979                           ;USART_putc@Byte stored from wreg
   980  0445  1283               	bcf	3,5	;RP0=0, select bank0
   981  0446  1303               	bcf	3,6	;RP1=0, select bank0
   982  0447  00B5               	movwf	USART_putc@Byte
   983  0448                     l112:	
   984                           ;main.c: 145: while(!TXIF);
   985                           
   986  0448  1E0C               	btfss	12,4	;volatile
   987  0449  2C48               	goto	l112
   988                           
   989                           ;main.c: 146: TXREG = Byte;
   990  044A  0835               	movf	USART_putc@Byte,w
   991  044B  0099               	movwf	25	;volatile
   992  044C  0008               	return
   993  044D                     __end_of_USART_putc:	
   994                           
   995                           	psect	text4
   996  02E8                     __ptext4:	
   997 ;; *************** function ___lwmod *****************
   998 ;; Defined at:
   999 ;;		line 6 in file "/opt/microchip/xc8/v1.32/sources/common/lwmod.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  divisor         2   29[BANK0 ] unsigned int 
  1002 ;;  dividend        2   31[BANK0 ] unsigned int 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  counter         1   34[BANK0 ] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2   29[BANK0 ] unsigned int 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1014 ;;      Params:         0       4       0       0
  1015 ;;      Locals:         0       1       0       0
  1016 ;;      Temps:          0       1       0       0
  1017 ;;      Totals:         0       6       0       0
  1018 ;;Total ram usage:        6 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    4
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_printf
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function ___lwmod
  1030  02E8                     ___lwmod:	
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1034  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1035  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1036  02EA  083E               	movf	___lwmod@divisor+1,w
  1037  02EB  043D               	iorwf	___lwmod@divisor,w
  1038  02EC  1903               	skipnz
  1039  02ED  2B17               	goto	l1134
  1040  02EE  01C2               	clrf	___lwmod@counter
  1041  02EF  0AC2               	incf	___lwmod@counter,f
  1042  02F0                     l1124:	
  1043  02F0  1BBE               	btfsc	___lwmod@divisor+1,7
  1044  02F1  2AFE               	goto	l1126
  1045  02F2  3001               	movlw	1
  1046  02F3                     u845:	
  1047  02F3  1003               	clrc
  1048  02F4  0DBD               	rlf	___lwmod@divisor,f
  1049  02F5  0DBE               	rlf	___lwmod@divisor+1,f
  1050  02F6  3EFF               	addlw	-1
  1051  02F7  1D03               	skipz
  1052  02F8  2AF3               	goto	u845
  1053  02F9  3001               	movlw	1
  1054  02FA  00C1               	movwf	??___lwmod
  1055  02FB  0841               	movf	??___lwmod,w
  1056  02FC  07C2               	addwf	___lwmod@counter,f
  1057  02FD  2AF0               	goto	l1124
  1058  02FE                     l1126:	
  1059  02FE  083E               	movf	___lwmod@divisor+1,w
  1060  02FF  0240               	subwf	___lwmod@dividend+1,w
  1061  0300  1D03               	skipz
  1062  0301  2B04               	goto	u865
  1063  0302  083D               	movf	___lwmod@divisor,w
  1064  0303  023F               	subwf	___lwmod@dividend,w
  1065  0304                     u865:	
  1066  0304  1C03               	skipc
  1067  0305  2B0C               	goto	l1130
  1068  0306  083D               	movf	___lwmod@divisor,w
  1069  0307  02BF               	subwf	___lwmod@dividend,f
  1070  0308  083E               	movf	___lwmod@divisor+1,w
  1071  0309  1C03               	skipc
  1072  030A  03C0               	decf	___lwmod@dividend+1,f
  1073  030B  02C0               	subwf	___lwmod@dividend+1,f
  1074  030C                     l1130:	
  1075  030C  3001               	movlw	1
  1076  030D                     u875:	
  1077  030D  1003               	clrc
  1078  030E  0CBE               	rrf	___lwmod@divisor+1,f
  1079  030F  0CBD               	rrf	___lwmod@divisor,f
  1080  0310  3EFF               	addlw	-1
  1081  0311  1D03               	skipz
  1082  0312  2B0D               	goto	u875
  1083  0313  3001               	movlw	1
  1084  0314  02C2               	subwf	___lwmod@counter,f
  1085  0315  1D03               	btfss	3,2
  1086  0316  2AFE               	goto	l1126
  1087  0317                     l1134:	
  1088  0317  0840               	movf	___lwmod@dividend+1,w
  1089  0318  01BE               	clrf	?___lwmod+1
  1090  0319  07BE               	addwf	?___lwmod+1,f
  1091  031A  083F               	movf	___lwmod@dividend,w
  1092  031B  01BD               	clrf	?___lwmod
  1093  031C  07BD               	addwf	?___lwmod,f
  1094  031D  0008               	return
  1095  031E                     __end_of___lwmod:	
  1096                           
  1097                           	psect	text5
  1098  026A                     __ptext5:	
  1099 ;; *************** function ___lwdiv *****************
  1100 ;; Defined at:
  1101 ;;		line 6 in file "/opt/microchip/xc8/v1.32/sources/common/lwdiv.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  divisor         2   21[BANK0 ] unsigned int 
  1104 ;;  dividend        2   23[BANK0 ] unsigned int 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  quotient        2   26[BANK0 ] unsigned int 
  1107 ;;  counter         1   28[BANK0 ] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  2   21[BANK0 ] unsigned int 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1117 ;;      Params:         0       4       0       0
  1118 ;;      Locals:         0       3       0       0
  1119 ;;      Temps:          0       1       0       0
  1120 ;;      Totals:         0       8       0       0
  1121 ;;Total ram usage:        8 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    4
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_printf
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function ___lwdiv
  1133  026A                     ___lwdiv:	
  1134                           
  1135                           ;incstack = 0
  1136                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1137  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1138  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1139  026C  01BA               	clrf	___lwdiv@quotient
  1140  026D  01BB               	clrf	___lwdiv@quotient+1
  1141  026E  0836               	movf	___lwdiv@divisor+1,w
  1142  026F  0435               	iorwf	___lwdiv@divisor,w
  1143  0270  1903               	skipnz
  1144  0271  2AA3               	goto	l1112
  1145  0272  01BC               	clrf	___lwdiv@counter
  1146  0273  0ABC               	incf	___lwdiv@counter,f
  1147  0274                     l1100:	
  1148  0274  1BB6               	btfsc	___lwdiv@divisor+1,7
  1149  0275  2A82               	goto	l1102
  1150  0276  3001               	movlw	1
  1151  0277                     u775:	
  1152  0277  1003               	clrc
  1153  0278  0DB5               	rlf	___lwdiv@divisor,f
  1154  0279  0DB6               	rlf	___lwdiv@divisor+1,f
  1155  027A  3EFF               	addlw	-1
  1156  027B  1D03               	skipz
  1157  027C  2A77               	goto	u775
  1158  027D  3001               	movlw	1
  1159  027E  00B9               	movwf	??___lwdiv
  1160  027F  0839               	movf	??___lwdiv,w
  1161  0280  07BC               	addwf	___lwdiv@counter,f
  1162  0281  2A74               	goto	l1100
  1163  0282                     l1102:	
  1164  0282  3001               	movlw	1
  1165  0283                     u795:	
  1166  0283  1003               	clrc
  1167  0284  0DBA               	rlf	___lwdiv@quotient,f
  1168  0285  0DBB               	rlf	___lwdiv@quotient+1,f
  1169  0286  3EFF               	addlw	-1
  1170  0287  1D03               	skipz
  1171  0288  2A83               	goto	u795
  1172  0289  0836               	movf	___lwdiv@divisor+1,w
  1173  028A  0238               	subwf	___lwdiv@dividend+1,w
  1174  028B  1D03               	skipz
  1175  028C  2A8F               	goto	u805
  1176  028D  0835               	movf	___lwdiv@divisor,w
  1177  028E  0237               	subwf	___lwdiv@dividend,w
  1178  028F                     u805:	
  1179  028F  1C03               	skipc
  1180  0290  2A98               	goto	l1108
  1181  0291  0835               	movf	___lwdiv@divisor,w
  1182  0292  02B7               	subwf	___lwdiv@dividend,f
  1183  0293  0836               	movf	___lwdiv@divisor+1,w
  1184  0294  1C03               	skipc
  1185  0295  03B8               	decf	___lwdiv@dividend+1,f
  1186  0296  02B8               	subwf	___lwdiv@dividend+1,f
  1187  0297  143A               	bsf	___lwdiv@quotient,0
  1188  0298                     l1108:	
  1189  0298  3001               	movlw	1
  1190  0299                     u815:	
  1191  0299  1003               	clrc
  1192  029A  0CB6               	rrf	___lwdiv@divisor+1,f
  1193  029B  0CB5               	rrf	___lwdiv@divisor,f
  1194  029C  3EFF               	addlw	-1
  1195  029D  1D03               	skipz
  1196  029E  2A99               	goto	u815
  1197  029F  3001               	movlw	1
  1198  02A0  02BC               	subwf	___lwdiv@counter,f
  1199  02A1  1D03               	btfss	3,2
  1200  02A2  2A82               	goto	l1102
  1201  02A3                     l1112:	
  1202  02A3  083B               	movf	___lwdiv@quotient+1,w
  1203  02A4  01B6               	clrf	?___lwdiv+1
  1204  02A5  07B6               	addwf	?___lwdiv+1,f
  1205  02A6  083A               	movf	___lwdiv@quotient,w
  1206  02A7  01B5               	clrf	?___lwdiv
  1207  02A8  07B5               	addwf	?___lwdiv,f
  1208  02A9  0008               	return
  1209  02AA                     __end_of___lwdiv:	
  1210                           
  1211                           	psect	text6
  1212  03F6                     __ptext6:	
  1213 ;; *************** function _buzz_ok *****************
  1214 ;; Defined at:
  1215 ;;		line 162 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  buzz            1   22[BANK0 ] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;		None               void
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1229 ;;      Params:         0       0       0       0
  1230 ;;      Locals:         0       1       0       0
  1231 ;;      Temps:          0       1       0       0
  1232 ;;      Totals:         0       2       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    4
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           
  1244                           ;psect for function _buzz_ok
  1245  03F6                     _buzz_ok:	
  1246                           
  1247                           ;main.c: 164: unsigned char buzz = 800;
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _buzz_ok: [wreg+status,2+status,0]
  1251  03F6  3020               	movlw	32
  1252  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  1253  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  1254  03F9  00B5               	movwf	??_buzz_ok
  1255  03FA  0835               	movf	??_buzz_ok,w
  1256  03FB  00B6               	movwf	buzz_ok@buzz
  1257                           
  1258                           ;main.c: 165: TMR0IF = 1;
  1259  03FC  150B               	bsf	11,2	;volatile
  1260  03FD                     l1286:	
  1261                           ;main.c: 166: while(--buzz){
  1262                           
  1263  03FD  3001               	movlw	1
  1264  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1265  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0400  02B6               	subwf	buzz_ok@buzz,f
  1267  0401  1903               	btfsc	3,2
  1268  0402  0008               	return
  1269                           
  1270                           ;main.c: 167: RB5 = ~RB5;;
  1271  0403  3020               	movlw	32
  1272  0404  0686               	xorwf	6,f
  1273                           
  1274                           ;main.c: 168: _delay((unsigned long)((100)*(4000000/4000000.0)));
  1275  0405  3021               	movlw	33
  1276  0406  00B5               	movwf	??_buzz_ok
  1277  0407                     u1437:	
  1278  0407  0BB5               	decfsz	??_buzz_ok,f
  1279  0408  2C07               	goto	u1437
  1280  0409  2BFD               	goto	l1286
  1281  040A                     __end_of_buzz_ok:	
  1282                           
  1283                           	psect	text7
  1284  03D4                     __ptext7:	
  1285 ;; *************** function _BOARD_init *****************
  1286 ;; Defined at:
  1287 ;;		line 67 in file "main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;		None               void
  1294 ;; Registers used:
  1295 ;;		wreg
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1301 ;;      Params:         0       0       0       0
  1302 ;;      Locals:         0       0       0       0
  1303 ;;      Temps:          0       0       0       0
  1304 ;;      Totals:         0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    4
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           
  1316                           ;psect for function _BOARD_init
  1317  03D4                     _BOARD_init:	
  1318                           
  1319                           ;main.c: 70: SPBRG = ((4000000/16)/9600) - 1;
  1320                           
  1321                           ;incstack = 0
  1322                           ; Regs used in _BOARD_init: [wreg]
  1323  03D4  3019               	movlw	25
  1324  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  1325  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  1326  03D7  0099               	movwf	25	;volatile
  1327                           
  1328                           ;main.c: 71: TRISB2 = 0;
  1329  03D8  1106               	bcf	6,2	;volatile
  1330                           
  1331                           ;main.c: 72: TRISB1 = 1;
  1332  03D9  1486               	bsf	6,1	;volatile
  1333                           
  1334                           ;main.c: 73: BRGH = 1;
  1335  03DA  1518               	bsf	24,2	;volatile
  1336                           
  1337                           ;main.c: 74: SYNC = 0;
  1338  03DB  1218               	bcf	24,4	;volatile
  1339                           
  1340                           ;main.c: 75: SPEN = 1;
  1341  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1342  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1343  03DE  1798               	bsf	24,7	;volatile
  1344                           
  1345                           ;main.c: 76: CREN = 1;
  1346  03DF  1618               	bsf	24,4	;volatile
  1347                           
  1348                           ;main.c: 77: SREN = 0;
  1349  03E0  1298               	bcf	24,5	;volatile
  1350                           
  1351                           ;main.c: 78: TXIE = 0;
  1352  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  1353  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  1354  03E3  120C               	bcf	12,4	;volatile
  1355                           
  1356                           ;main.c: 79: RCIE = 1;
  1357  03E4  168C               	bsf	12,5	;volatile
  1358                           
  1359                           ;main.c: 80: TX9 = 0;
  1360  03E5  1318               	bcf	24,6	;volatile
  1361                           
  1362                           ;main.c: 81: RX9 = 0;
  1363  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1364  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1365  03E8  1318               	bcf	24,6	;volatile
  1366                           
  1367                           ;main.c: 82: TXEN = 0;
  1368  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1369  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1370  03EB  1298               	bcf	24,5	;volatile
  1371                           
  1372                           ;main.c: 83: TXEN = 1;
  1373  03EC  1698               	bsf	24,5	;volatile
  1374                           
  1375                           ;main.c: 86: TRISB3 = 0;
  1376  03ED  1186               	bcf	6,3	;volatile
  1377                           
  1378                           ;main.c: 87: TRISB5 = 0;
  1379  03EE  1286               	bcf	6,5	;volatile
  1380                           
  1381                           ;main.c: 88: TRISA0 = 0;
  1382  03EF  1005               	bcf	5,0	;volatile
  1383                           
  1384                           ;main.c: 89: TRISA1 = 0;
  1385  03F0  1085               	bcf	5,1	;volatile
  1386                           
  1387                           ;main.c: 90: TRISA2 = 0;
  1388  03F1  1105               	bcf	5,2	;volatile
  1389                           
  1390                           ;main.c: 91: TRISA3 = 1;
  1391  03F2  1585               	bsf	5,3	;volatile
  1392                           
  1393                           ;main.c: 94: GIE = 1;
  1394  03F3  178B               	bsf	11,7	;volatile
  1395                           
  1396                           ;main.c: 95: PEIE = 1;
  1397  03F4  170B               	bsf	11,6	;volatile
  1398  03F5  0008               	return
  1399  03F6                     __end_of_BOARD_init:	
  1400                           
  1401                           	psect	text8
  1402  001A                     __ptext8:	
  1403 ;; *************** function _ISR *****************
  1404 ;; Defined at:
  1405 ;;		line 98 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  b               1   20[BANK0 ] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;		None               void
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1419 ;;      Params:         0       0       0       0
  1420 ;;      Locals:         0       1       0       0
  1421 ;;      Temps:          0       7       0       0
  1422 ;;      Totals:         0       8       0       0
  1423 ;;Total ram usage:        8 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    3
  1426 ;; This function calls:
  1427 ;;		_USART_getc
  1428 ;;		_buzz_error
  1429 ;;		_isalpha
  1430 ;;		_set_portAbit
  1431 ;;		_strcmp
  1432 ;;		i1_buzz_ok
  1433 ;;		i1_printf
  1434 ;; This function is called by:
  1435 ;;		Interrupt level 1
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           
  1440                           ;psect for function _ISR
  1441  001A                     _ISR:	
  1442                           
  1443                           ;main.c: 100: if (RCIF) {
  1444  001A  1E8C               	btfss	12,5	;volatile
  1445  001B  28D7               	goto	i1l109
  1446                           
  1447                           ;main.c: 101: static unsigned char i = 0;
  1448                           ;main.c: 102: unsigned char b = USART_getc();
  1449  001C  243B               	fcall	_USART_getc
  1450  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1451  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1452  001F  00AD               	movwf	??_ISR
  1453  0020  082D               	movf	??_ISR,w
  1454  0021  00B4               	movwf	ISR@b
  1455                           
  1456                           ;main.c: 103: if ( isalpha(b) && i < 4 )
  1457  0022  0834               	movf	ISR@b,w
  1458  0023  241C               	fcall	_isalpha
  1459  0024  1C03               	btfss	3,0
  1460  0025  2838               	goto	i1l1418
  1461  0026  3004               	movlw	4
  1462  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0029  024F               	subwf	ISR@i,w
  1465  002A  1803               	skipnc
  1466  002B  2838               	goto	i1l1418
  1467                           
  1468                           ;main.c: 104: receive_buffer[i++] = b;
  1469  002C  0834               	movf	ISR@b,w
  1470  002D  00AD               	movwf	??_ISR
  1471  002E  084F               	movf	ISR@i,w
  1472  002F  3E51               	addlw	_receive_buffer& (0+255)
  1473  0030  0084               	movwf	4
  1474  0031  082D               	movf	??_ISR,w
  1475  0032  1383               	bcf	3,7	;select IRP bank0
  1476  0033  0080               	movwf	0
  1477  0034  3001               	movlw	1
  1478  0035  00AD               	movwf	??_ISR
  1479  0036  082D               	movf	??_ISR,w
  1480  0037  07CF               	addwf	ISR@i,f
  1481  0038                     i1l1418:	
  1482                           
  1483                           ;main.c: 106: if ( b == '\n' ) {
  1484  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1486  003A  0834               	movf	ISR@b,w
  1487  003B  3A0A               	xorlw	10
  1488  003C  1D03               	skipz
  1489  003D  28CE               	goto	i1l1460
  1490                           
  1491                           ;main.c: 107: if(strcmp(receive_buffer,"KYON") == 0) {
  1492  003E  302E               	movlw	(STR_2-__stringbase)& (0+255)
  1493  003F  00AD               	movwf	??_ISR
  1494  0040  082D               	movf	??_ISR,w
  1495  0041  00F0               	movwf	strcmp@s2
  1496  0042  3051               	movlw	_receive_buffer& (0+255)
  1497  0043  23AE               	fcall	_strcmp
  1498  0044  0871               	movf	?_strcmp+1,w
  1499  0045  0470               	iorwf	?_strcmp,w
  1500  0046  1D03               	skipz
  1501  0047  284D               	goto	i1l1424
  1502                           
  1503                           ;main.c: 108: buzz_ok();
  1504  0048  240A               	fcall	i1_buzz_ok
  1505                           
  1506                           ;main.c: 109: set_portAbit(0,1);
  1507  0049  01F0               	clrf	set_portAbit@val
  1508  004A  0AF0               	incf	set_portAbit@val,f
  1509  004B  3000               	movlw	0
  1510  004C  2387               	fcall	_set_portAbit
  1511  004D                     i1l1424:	
  1512                           
  1513                           ;main.c: 110: }
  1514                           ;main.c: 112: if (strcmp(receive_buffer,"IGNT") == 0) {
  1515  004D  3038               	movlw	(STR_3-__stringbase)& (0+255)
  1516  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1517  004F  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0050  00AD               	movwf	??_ISR
  1519  0051  082D               	movf	??_ISR,w
  1520  0052  00F0               	movwf	strcmp@s2
  1521  0053  3051               	movlw	_receive_buffer& (0+255)
  1522  0054  23AE               	fcall	_strcmp
  1523  0055  0871               	movf	?_strcmp+1,w
  1524  0056  0470               	iorwf	?_strcmp,w
  1525  0057  1D03               	skipz
  1526  0058  28A2               	goto	i1l1446
  1527                           
  1528                           ;main.c: 113: if(RA3) {
  1529  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1530  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1531  005B  1D85               	btfss	5,3	;volatile
  1532  005C  2861               	goto	i1l1432
  1533                           
  1534                           ;main.c: 114: printf("ERR_NEUTRAL");
  1535  005D  300B               	movlw	(STR_4-__stringbase)& (0+255)
  1536  005E  2186               	fcall	i1_printf
  1537                           
  1538                           ;main.c: 115: buzz_error();
  1539  005F  231E               	fcall	_buzz_error
  1540                           
  1541                           ;main.c: 116: } else {
  1542  0060  28A2               	goto	i1l1446
  1543  0061                     i1l1432:	
  1544                           
  1545                           ;main.c: 117: buzz_ok();
  1546  0061  240A               	fcall	i1_buzz_ok
  1547                           
  1548                           ;main.c: 118: if(!RA0) {
  1549  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0064  1805               	btfsc	5,0	;volatile
  1552  0065  2879               	goto	i1l1440
  1553                           
  1554                           ;main.c: 119: set_portAbit(0,1);
  1555  0066  01F0               	clrf	set_portAbit@val
  1556  0067  0AF0               	incf	set_portAbit@val,f
  1557  0068  3000               	movlw	0
  1558  0069  2387               	fcall	_set_portAbit
  1559                           
  1560                           ;main.c: 120: _delay((unsigned long)((500)*(4000000/4000.0)));
  1561  006A  3003               	movlw	3
  1562  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1563  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1564  006D  00AF               	movwf	??_ISR+2
  1565  006E  308A               	movlw	138
  1566  006F  00AE               	movwf	??_ISR+1
  1567  0070  3056               	movlw	86
  1568  0071  00AD               	movwf	??_ISR
  1569  0072                     u144_27:	
  1570  0072  0BAD               	decfsz	??_ISR,f
  1571  0073  2872               	goto	u144_27
  1572  0074  0BAE               	decfsz	??_ISR+1,f
  1573  0075  2872               	goto	u144_27
  1574  0076  0BAF               	decfsz	??_ISR+2,f
  1575  0077  2872               	goto	u144_27
  1576  0078  2879               	nop2
  1577  0079                     i1l1440:	
  1578                           
  1579                           ;main.c: 121: }
  1580                           ;main.c: 122: set_portAbit(2,1);
  1581  0079  01F0               	clrf	set_portAbit@val
  1582  007A  0AF0               	incf	set_portAbit@val,f
  1583  007B  3002               	movlw	2
  1584  007C  2387               	fcall	_set_portAbit
  1585                           
  1586                           ;main.c: 123: _delay((unsigned long)((500)*(4000000/4000.0)));
  1587  007D  3003               	movlw	3
  1588  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1589  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0080  00AF               	movwf	??_ISR+2
  1591  0081  308A               	movlw	138
  1592  0082  00AE               	movwf	??_ISR+1
  1593  0083  3056               	movlw	86
  1594  0084  00AD               	movwf	??_ISR
  1595  0085                     u145_27:	
  1596  0085  0BAD               	decfsz	??_ISR,f
  1597  0086  2885               	goto	u145_27
  1598  0087  0BAE               	decfsz	??_ISR+1,f
  1599  0088  2885               	goto	u145_27
  1600  0089  0BAF               	decfsz	??_ISR+2,f
  1601  008A  2885               	goto	u145_27
  1602  008B  288C               	nop2
  1603                           
  1604                           ;main.c: 124: set_portAbit(1,1);
  1605  008C  01F0               	clrf	set_portAbit@val
  1606  008D  0AF0               	incf	set_portAbit@val,f
  1607  008E  3001               	movlw	1
  1608  008F  2387               	fcall	_set_portAbit
  1609                           
  1610                           ;main.c: 125: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1611  0090  300B               	movlw	11
  1612  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0093  00AF               	movwf	??_ISR+2
  1615  0094  3026               	movlw	38
  1616  0095  00AE               	movwf	??_ISR+1
  1617  0096  3066               	movlw	102
  1618  0097  00AD               	movwf	??_ISR
  1619  0098                     u146_27:	
  1620  0098  0BAD               	decfsz	??_ISR,f
  1621  0099  2898               	goto	u146_27
  1622  009A  0BAE               	decfsz	??_ISR+1,f
  1623  009B  2898               	goto	u146_27
  1624  009C  0BAF               	decfsz	??_ISR+2,f
  1625  009D  2898               	goto	u146_27
  1626  009E  289F               	nop2
  1627                           
  1628                           ;main.c: 126: set_portAbit(1,0);
  1629  009F  01F0               	clrf	set_portAbit@val
  1630  00A0  3001               	movlw	1
  1631  00A1  2387               	fcall	_set_portAbit
  1632  00A2                     i1l1446:	
  1633                           
  1634                           ;main.c: 127: }
  1635                           ;main.c: 128: }
  1636                           ;main.c: 130: if (strcmp(receive_buffer,"KYOF") == 0) { RA0 = 0; }
  1637  00A2  3024               	movlw	(STR_5-__stringbase)& (0+255)
  1638  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1639  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1640  00A5  00AD               	movwf	??_ISR
  1641  00A6  082D               	movf	??_ISR,w
  1642  00A7  00F0               	movwf	strcmp@s2
  1643  00A8  3051               	movlw	_receive_buffer& (0+255)
  1644  00A9  23AE               	fcall	_strcmp
  1645  00AA  0871               	movf	?_strcmp+1,w
  1646  00AB  0470               	iorwf	?_strcmp,w
  1647  00AC  1D03               	skipz
  1648  00AD  28B1               	goto	i1l1450
  1649  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1650  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1651  00B0  1005               	bcf	5,0	;volatile
  1652  00B1                     i1l1450:	
  1653                           
  1654                           ;main.c: 131: if (strcmp(receive_buffer,"BZOK") == 0) { buzz_ok(); }
  1655  00B1  3029               	movlw	(STR_6-__stringbase)& (0+255)
  1656  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1657  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1658  00B4  00AD               	movwf	??_ISR
  1659  00B5  082D               	movf	??_ISR,w
  1660  00B6  00F0               	movwf	strcmp@s2
  1661  00B7  3051               	movlw	_receive_buffer& (0+255)
  1662  00B8  23AE               	fcall	_strcmp
  1663  00B9  0871               	movf	?_strcmp+1,w
  1664  00BA  0470               	iorwf	?_strcmp,w
  1665  00BB  1D03               	skipz
  1666  00BC  28BE               	goto	i1l1454
  1667  00BD  240A               	fcall	i1_buzz_ok
  1668  00BE                     i1l1454:	
  1669                           
  1670                           ;main.c: 132: if (strcmp(receive_buffer,"BZER") == 0) { buzz_error(); }
  1671  00BE  3033               	movlw	(STR_7-__stringbase)& (0+255)
  1672  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1673  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1674  00C1  00AD               	movwf	??_ISR
  1675  00C2  082D               	movf	??_ISR,w
  1676  00C3  00F0               	movwf	strcmp@s2
  1677  00C4  3051               	movlw	_receive_buffer& (0+255)
  1678  00C5  23AE               	fcall	_strcmp
  1679  00C6  0871               	movf	?_strcmp+1,w
  1680  00C7  0470               	iorwf	?_strcmp,w
  1681  00C8  1D03               	skipz
  1682  00C9  28CB               	goto	i1l1458
  1683  00CA  231E               	fcall	_buzz_error
  1684  00CB                     i1l1458:	
  1685                           
  1686                           ;main.c: 134: i = 0;
  1687  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1688  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1689  00CD  01CF               	clrf	ISR@i
  1690  00CE                     i1l1460:	
  1691                           
  1692                           ;main.c: 135: }
  1693                           ;main.c: 137: printf("%d\r\n",receive_buffer);
  1694  00CE  3051               	movlw	_receive_buffer& (0+255)
  1695  00CF  00AD               	movwf	??_ISR
  1696  00D0  082D               	movf	??_ISR,w
  1697  00D1  00A0               	movwf	?i1_printf
  1698  00D2  301F               	movlw	(STR_8-__stringbase)& (0+255)
  1699  00D3  2186               	fcall	i1_printf
  1700                           
  1701                           ;main.c: 139: RCIF = 0;
  1702  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1703  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1704  00D6  128C               	bcf	12,5	;volatile
  1705  00D7                     i1l109:	
  1706  00D7  0833               	movf	??_ISR+6,w
  1707  00D8  00FF               	movwf	127
  1708  00D9  0832               	movf	??_ISR+5,w
  1709  00DA  008A               	movwf	10
  1710  00DB  0831               	movf	??_ISR+4,w
  1711  00DC  0084               	movwf	4
  1712  00DD  0E30               	swapf	(??_ISR+3)^0,w
  1713  00DE  0083               	movwf	3
  1714  00DF  0EFE               	swapf	126,f
  1715  00E0  0E7E               	swapf	126,w
  1716  00E1  0009               	retfie
  1717  00E2                     __end_of_ISR:	
  1718                           
  1719                           	psect	intentry
  1720  0004                     __pintentry:	
  1721                           ;incstack = 0
  1722                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1723                           
  1724  0004                     interrupt_function:	
  1725  007E                     saved_w	set	btemp
  1726  0004  00FE               	movwf	btemp
  1727  0005  0E03               	swapf	3,w
  1728  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0008  00B0               	movwf	??_ISR+3
  1731  0009  0804               	movf	4,w
  1732  000A  00B1               	movwf	??_ISR+4
  1733  000B  080A               	movf	10,w
  1734  000C  00B2               	movwf	??_ISR+5
  1735  000D  087F               	movf	btemp+1,w
  1736  000E  00B3               	movwf	??_ISR+6
  1737  000F  281A               	ljmp	_ISR
  1738                           
  1739                           	psect	text9
  1740  0186                     __ptext9:	
  1741 ;; *************** function i1_printf *****************
  1742 ;; Defined at:
  1743 ;;		line 464 in file "/opt/microchip/xc8/v1.32/sources/common/doprnt.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  f               1    wreg     PTR const unsigned char 
  1746 ;;		 -> STR_8(5), STR_4(12), STR_1(8), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1749 ;;		 -> STR_8(5), STR_4(12), STR_1(8), 
  1750 ;;  printf          4    8[BANK0 ] struct .
  1751 ;;  printf          1   12[BANK0 ] char 
  1752 ;;  printf          1    7[BANK0 ] char 
  1753 ;;  printf          1    6[BANK0 ] unsigned char 
  1754 ;;  printf          1    5[BANK0 ] PTR void [1]
  1755 ;;		 -> ?i1_printf(2), ?_printf(2), 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2    0[BANK0 ] int 
  1758 ;; Registers used:
  1759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1765 ;;      Params:         0       1       0       0
  1766 ;;      Locals:         0       9       0       0
  1767 ;;      Temps:          0       3       0       0
  1768 ;;      Totals:         0      13       0       0
  1769 ;;Total ram usage:       13 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    2
  1772 ;; This function calls:
  1773 ;;		i1___lwdiv
  1774 ;;		i1___lwmod
  1775 ;;		i1_putch
  1776 ;; This function is called by:
  1777 ;;		_ISR
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function i1_printf
  1783  0186                     i1_printf:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in i1_printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1787                           ;i1printf@f stored from wreg
  1788  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0188  00A4               	movwf	i1printf@f
  1791                           
  1792                           ;doprnt.c: 466: va_list ap;
  1793                           ;doprnt.c: 499: signed char c;
  1794                           ;doprnt.c: 506: signed char prec;
  1795                           ;doprnt.c: 508: unsigned char flag;
  1796                           ;doprnt.c: 527: union {
  1797                           ;doprnt.c: 528: unsigned int _val;
  1798                           ;doprnt.c: 529: struct {
  1799                           ;doprnt.c: 530: const char * _cp;
  1800                           ;doprnt.c: 531: unsigned _len;
  1801                           ;doprnt.c: 532: } _str;
  1802                           ;doprnt.c: 533: } _val;
  1803                           ;doprnt.c: 542: *ap = __va_start();
  1804  0189  3020               	movlw	?i1_printf& (0+255)
  1805  018A  00A1               	movwf	??i1_printf
  1806  018B  0821               	movf	??i1_printf,w
  1807  018C  00A5               	movwf	i1printf@ap
  1808  018D                     i1l1398:	
  1809                           ;doprnt.c: 545: while(c = *f++) {
  1810                           
  1811  018D  3001               	movlw	1
  1812  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1813  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0190  07A4               	addwf	i1printf@f,f
  1815  0191  30FF               	movlw	-1
  1816  0192  0724               	addwf	i1printf@f,w
  1817  0193  0084               	movwf	4
  1818  0194  2228               	fcall	stringdir
  1819  0195  00A1               	movwf	??i1_printf
  1820  0196  0821               	movf	??i1_printf,w
  1821  0197  00AC               	movwf	i1printf@c
  1822  0198  08AC               	movf	i1printf@c,f
  1823  0199  1903               	btfsc	3,2
  1824  019A  0008               	return
  1825                           
  1826                           ;doprnt.c: 547: if(c != '%')
  1827  019B  082C               	movf	i1printf@c,w
  1828  019C  3A25               	xorlw	37
  1829  019D  1903               	skipnz
  1830  019E  29A2               	goto	i1l1358
  1831                           
  1832                           ;doprnt.c: 549: {
  1833                           ;doprnt.c: 550: (putch(c) );
  1834  019F  082C               	movf	i1printf@c,w
  1835  01A0  2460               	fcall	i1_putch
  1836                           
  1837                           ;doprnt.c: 551: continue;
  1838  01A1  298D               	goto	i1l1398
  1839  01A2                     i1l1358:	
  1840                           
  1841                           ;doprnt.c: 552: }
  1842                           ;doprnt.c: 557: flag = 0;
  1843  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1844  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1845  01A4  01A6               	clrf	i1printf@flag
  1846                           
  1847                           ;doprnt.c: 831: }
  1848                           
  1849                           ;doprnt.c: 822: continue;
  1850                           
  1851                           ;doprnt.c: 811: default:
  1852                           
  1853                           ;doprnt.c: 707: case 'i':
  1854                           ;doprnt.c: 708: break;
  1855                           
  1856                           ;doprnt.c: 706: case 'd':
  1857                           
  1858                           ;doprnt.c: 647: goto alldone;
  1859                           
  1860                           ;doprnt.c: 646: case 0:
  1861                           
  1862                           ;doprnt.c: 644: switch(c = *f++) {
  1863  01A5  3001               	movlw	1
  1864  01A6  07A4               	addwf	i1printf@f,f
  1865  01A7  30FF               	movlw	-1
  1866  01A8  0724               	addwf	i1printf@f,w
  1867  01A9  0084               	movwf	4
  1868  01AA  2228               	fcall	stringdir
  1869  01AB  00AC               	movwf	i1printf@c
  1870                           
  1871                           ; Switch size 1, requested type "space"
  1872                           ; Number of cases is 3, Range of values is 0 to 105
  1873                           ; switch strategies available:
  1874                           ; Name         Instructions Cycles
  1875                           ; simple_byte           10     6 (average)
  1876                           ; direct_byte          112     6 (fixed)
  1877                           ; jumptable            260     6 (fixed)
  1878                           ;	Chosen strategy is simple_byte
  1879  01AC  3A00               	xorlw	0	; case 0
  1880  01AD  1903               	skipnz
  1881  01AE  2A27               	goto	i1l177
  1882  01AF  3A64               	xorlw	100	; case 100
  1883  01B0  1903               	skipnz
  1884  01B1  29B6               	goto	i1l1364
  1885  01B2  3A0D               	xorlw	13	; case 105
  1886  01B3  1903               	skipnz
  1887  01B4  29B6               	goto	i1l1364
  1888  01B5  298D               	goto	i1l1398
  1889  01B6                     i1l1364:	
  1890                           
  1891                           ;doprnt.c: 1262: {
  1892                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1893  01B6  0825               	movf	i1printf@ap,w
  1894  01B7  0084               	movwf	4
  1895  01B8  1383               	bcf	3,7	;select IRP bank0
  1896  01B9  0800               	movf	0,w
  1897  01BA  00A8               	movwf	i1printf@_val
  1898  01BB  0A84               	incf	4,f
  1899  01BC  0800               	movf	0,w
  1900  01BD  00A9               	movwf	i1printf@_val+1
  1901  01BE  3002               	movlw	2
  1902  01BF  00A1               	movwf	??i1_printf
  1903  01C0  0821               	movf	??i1_printf,w
  1904  01C1  07A5               	addwf	i1printf@ap,f
  1905                           
  1906                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1907  01C2  1FA9               	btfss	i1printf@_val+1,7
  1908  01C3  29CD               	goto	i1l1374
  1909                           
  1910                           ;doprnt.c: 1271: flag |= 0x03;
  1911  01C4  3003               	movlw	3
  1912  01C5  00A1               	movwf	??i1_printf
  1913  01C6  0821               	movf	??i1_printf,w
  1914  01C7  04A6               	iorwf	i1printf@flag,f
  1915                           
  1916                           ;doprnt.c: 1272: _val._val = -_val._val;
  1917  01C8  09A8               	comf	i1printf@_val,f
  1918  01C9  09A9               	comf	i1printf@_val+1,f
  1919  01CA  0AA8               	incf	i1printf@_val,f
  1920  01CB  1903               	skipnz
  1921  01CC  0AA9               	incf	i1printf@_val+1,f
  1922  01CD                     i1l1374:	
  1923                           
  1924                           ;doprnt.c: 1273: }
  1925                           ;doprnt.c: 1275: }
  1926                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1927  01CD  01AC               	clrf	i1printf@c
  1928  01CE  0AAC               	incf	i1printf@c,f
  1929  01CF  082C               	movf	i1printf@c,w
  1930  01D0  3A05               	xorlw	5
  1931  01D1  1903               	btfsc	3,2
  1932  01D2  29EC               	goto	i1l1386
  1933  01D3                     i1l1378:	
  1934                           
  1935                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1936  01D3  082C               	movf	i1printf@c,w
  1937  01D4  00A1               	movwf	??i1_printf
  1938  01D5  0721               	addwf	??i1_printf,w
  1939  01D6  3E01               	addlw	low (_dpowers-__stringbase)
  1940  01D7  0084               	movwf	4
  1941  01D8  2228               	fcall	stringdir
  1942  01D9  00A2               	movwf	??i1_printf+1
  1943  01DA  2228               	fcall	stringdir
  1944  01DB  00A3               	movwf	??i1_printf+2
  1945  01DC  0823               	movf	??i1_printf+2,w
  1946  01DD  0229               	subwf	i1printf@_val+1,w
  1947  01DE  1D03               	skipz
  1948  01DF  29E2               	goto	u127_25
  1949  01E0  0822               	movf	??i1_printf+1,w
  1950  01E1  0228               	subwf	i1printf@_val,w
  1951  01E2                     u127_25:	
  1952  01E2  1C03               	btfss	3,0
  1953  01E3  29EC               	goto	i1l1386
  1954                           
  1955                           ;doprnt.c: 1316: break;
  1956  01E4  3001               	movlw	1
  1957  01E5  00A1               	movwf	??i1_printf
  1958  01E6  0821               	movf	??i1_printf,w
  1959  01E7  07AC               	addwf	i1printf@c,f
  1960  01E8  082C               	movf	i1printf@c,w
  1961  01E9  3A05               	xorlw	5
  1962  01EA  1D03               	skipz
  1963  01EB  29D3               	goto	i1l1378
  1964  01EC                     i1l1386:	
  1965                           
  1966                           ;doprnt.c: 1431: {
  1967                           ;doprnt.c: 1447: if(flag & 0x03)
  1968  01EC  0826               	movf	i1printf@flag,w
  1969  01ED  3903               	andlw	3
  1970  01EE  1903               	btfsc	3,2
  1971  01EF  29F2               	goto	i1l1390
  1972                           
  1973                           ;doprnt.c: 1448: (putch('-') );
  1974  01F0  302D               	movlw	45
  1975  01F1  2460               	fcall	i1_putch
  1976  01F2                     i1l1390:	
  1977                           
  1978                           ;doprnt.c: 1478: }
  1979                           ;doprnt.c: 1481: prec = c;
  1980  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1981  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1982  01F4  082C               	movf	i1printf@c,w
  1983  01F5  00A1               	movwf	??i1_printf
  1984  01F6  0821               	movf	??i1_printf,w
  1985  01F7  00A7               	movwf	i1printf@prec
  1986  01F8                     i1l1396:	
  1987                           ;doprnt.c: 1483: while(prec--) {
  1988                           
  1989  01F8  30FF               	movlw	-1
  1990  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1991  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1992  01FB  00A1               	movwf	??i1_printf
  1993  01FC  0821               	movf	??i1_printf,w
  1994  01FD  07A7               	addwf	i1printf@prec,f
  1995  01FE  0827               	movf	i1printf@prec,w
  1996  01FF  3AFF               	xorlw	-1
  1997  0200  1903               	btfsc	3,2
  1998  0201  298D               	goto	i1l1398
  1999                           
  2000                           ;doprnt.c: 1487: {
  2001                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2002  0202  300A               	movlw	10
  2003  0203  00F8               	movwf	i1___lwmod@divisor
  2004  0204  3000               	movlw	0
  2005  0205  00F9               	movwf	i1___lwmod@divisor+1
  2006  0206  0827               	movf	i1printf@prec,w
  2007  0207  00A1               	movwf	??i1_printf
  2008  0208  0721               	addwf	??i1_printf,w
  2009  0209  3E01               	addlw	low (_dpowers-__stringbase)
  2010  020A  0084               	movwf	4
  2011  020B  2228               	fcall	stringdir
  2012  020C  00F0               	movwf	i1___lwdiv@divisor
  2013  020D  2228               	fcall	stringdir
  2014  020E  00F1               	movwf	i1___lwdiv@divisor+1
  2015  020F  0829               	movf	i1printf@_val+1,w
  2016  0210  01F3               	clrf	i1___lwdiv@dividend+1
  2017  0211  07F3               	addwf	i1___lwdiv@dividend+1,f
  2018  0212  0828               	movf	i1printf@_val,w
  2019  0213  01F2               	clrf	i1___lwdiv@dividend
  2020  0214  07F2               	addwf	i1___lwdiv@dividend,f
  2021  0215  22AA               	fcall	i1___lwdiv
  2022  0216  0871               	movf	?i1___lwdiv+1,w
  2023  0217  01FB               	clrf	i1___lwmod@dividend+1
  2024  0218  07FB               	addwf	i1___lwmod@dividend+1,f
  2025  0219  0870               	movf	?i1___lwdiv,w
  2026  021A  01FA               	clrf	i1___lwmod@dividend
  2027  021B  07FA               	addwf	i1___lwmod@dividend,f
  2028  021C  2353               	fcall	i1___lwmod
  2029  021D  0878               	movf	?i1___lwmod,w
  2030  021E  3E30               	addlw	48
  2031  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0221  00A2               	movwf	??i1_printf+1
  2034  0222  0822               	movf	??i1_printf+1,w
  2035  0223  00AC               	movwf	i1printf@c
  2036                           
  2037                           ;doprnt.c: 1532: }
  2038                           ;doprnt.c: 1533: (putch(c) );
  2039  0224  082C               	movf	i1printf@c,w
  2040  0225  2460               	fcall	i1_putch
  2041  0226  29F8               	goto	i1l1396
  2042  0227                     i1l177:	
  2043                           ;doprnt.c: 1549: return 0;
  2044                           ;	Return value of i1_printf is never used
  2045                           
  2046                           ;doprnt.c: 1534: }
  2047                           ;doprnt.c: 1542: }
  2048                           ;doprnt.c: 1544: alldone:
  2049                           
  2050  0227  0008               	return
  2051  0228                     __end_ofi1_printf:	
  2052                           
  2053                           	psect	text10
  2054  0460                     __ptext10:	
  2055 ;; *************** function i1_putch *****************
  2056 ;; Defined at:
  2057 ;;		line 188 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  byte            1    wreg     unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  byte            1    1[COMMON] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;		None               void
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2071 ;;      Params:         0       0       0       0
  2072 ;;      Locals:         1       0       0       0
  2073 ;;      Temps:          0       0       0       0
  2074 ;;      Totals:         1       0       0       0
  2075 ;;Total ram usage:        1 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		i1_USART_putc
  2080 ;; This function is called by:
  2081 ;;		i1_printf
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function i1_putch
  2087  0460                     i1_putch:	
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in i1_putch: [wreg+status,2+status,0+pclath+cstack]
  2091                           ;i1putch@byte stored from wreg
  2092  0460  00F1               	movwf	i1putch@byte
  2093                           
  2094                           ;main.c: 190: USART_putc(byte);
  2095  0461  0871               	movf	i1putch@byte,w
  2096  0462  244D               	fcall	i1_USART_putc
  2097  0463  0008               	return
  2098  0464                     __end_ofi1_putch:	
  2099                           
  2100                           	psect	text11
  2101  044D                     __ptext11:	
  2102 ;; *************** function i1_USART_putc *****************
  2103 ;; Defined at:
  2104 ;;		line 143 in file "main.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  Byte            1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  Byte            1    0[COMMON] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;		None               void
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2118 ;;      Params:         0       0       0       0
  2119 ;;      Locals:         1       0       0       0
  2120 ;;      Temps:          0       0       0       0
  2121 ;;      Totals:         1       0       0       0
  2122 ;;Total ram usage:        1 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; This function calls:
  2125 ;;		Nothing
  2126 ;; This function is called by:
  2127 ;;		i1_putch
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function i1_USART_putc
  2133  044D                     i1_USART_putc:	
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in i1_USART_putc: [wreg]
  2137                           ;i1USART_putc@Byte stored from wreg
  2138  044D  00F0               	movwf	i1USART_putc@Byte
  2139  044E                     i1l112:	
  2140                           ;main.c: 145: while(!TXIF);
  2141                           
  2142  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2143  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0450  1E0C               	btfss	12,4	;volatile
  2145  0451  2C4E               	goto	i1l112
  2146                           
  2147                           ;main.c: 146: TXREG = Byte;
  2148  0452  0870               	movf	i1USART_putc@Byte,w
  2149  0453  0099               	movwf	25	;volatile
  2150  0454  0008               	return
  2151  0455                     __end_ofi1_USART_putc:	
  2152                           
  2153                           	psect	text12
  2154  0353                     __ptext12:	
  2155 ;; *************** function i1___lwmod *****************
  2156 ;; Defined at:
  2157 ;;		line 6 in file "/opt/microchip/xc8/v1.32/sources/common/lwmod.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  divisor         2    8[COMMON] unsigned int 
  2160 ;;  dividend        2   10[COMMON] unsigned int 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  __lwmod         1   13[COMMON] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    8[COMMON] unsigned int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         4       0       0       0
  2173 ;;      Locals:         1       0       0       0
  2174 ;;      Temps:          1       0       0       0
  2175 ;;      Totals:         6       0       0       0
  2176 ;;Total ram usage:        6 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		i1_printf
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function i1___lwmod
  2187  0353                     i1___lwmod:	
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  2191  0353  0879               	movf	i1___lwmod@divisor+1,w
  2192  0354  0478               	iorwf	i1___lwmod@divisor,w
  2193  0355  1903               	skipnz
  2194  0356  2B80               	goto	i1l1184
  2195  0357  01FD               	clrf	i1___lwmod@counter
  2196  0358  0AFD               	incf	i1___lwmod@counter,f
  2197  0359                     i1l1174:	
  2198  0359  1BF9               	btfsc	i1___lwmod@divisor+1,7
  2199  035A  2B67               	goto	i1l1176
  2200  035B  3001               	movlw	1
  2201  035C                     u97_25:	
  2202  035C  1003               	clrc
  2203  035D  0DF8               	rlf	i1___lwmod@divisor,f
  2204  035E  0DF9               	rlf	i1___lwmod@divisor+1,f
  2205  035F  3EFF               	addlw	-1
  2206  0360  1D03               	skipz
  2207  0361  2B5C               	goto	u97_25
  2208  0362  3001               	movlw	1
  2209  0363  00FC               	movwf	??i1___lwmod
  2210  0364  087C               	movf	??i1___lwmod,w
  2211  0365  07FD               	addwf	i1___lwmod@counter,f
  2212  0366  2B59               	goto	i1l1174
  2213  0367                     i1l1176:	
  2214  0367  0879               	movf	i1___lwmod@divisor+1,w
  2215  0368  027B               	subwf	i1___lwmod@dividend+1,w
  2216  0369  1D03               	skipz
  2217  036A  2B6D               	goto	u99_25
  2218  036B  0878               	movf	i1___lwmod@divisor,w
  2219  036C  027A               	subwf	i1___lwmod@dividend,w
  2220  036D                     u99_25:	
  2221  036D  1C03               	skipc
  2222  036E  2B75               	goto	i1l1180
  2223  036F  0878               	movf	i1___lwmod@divisor,w
  2224  0370  02FA               	subwf	i1___lwmod@dividend,f
  2225  0371  0879               	movf	i1___lwmod@divisor+1,w
  2226  0372  1C03               	skipc
  2227  0373  03FB               	decf	i1___lwmod@dividend+1,f
  2228  0374  02FB               	subwf	i1___lwmod@dividend+1,f
  2229  0375                     i1l1180:	
  2230  0375  3001               	movlw	1
  2231  0376                     u100_25:	
  2232  0376  1003               	clrc
  2233  0377  0CF9               	rrf	i1___lwmod@divisor+1,f
  2234  0378  0CF8               	rrf	i1___lwmod@divisor,f
  2235  0379  3EFF               	addlw	-1
  2236  037A  1D03               	skipz
  2237  037B  2B76               	goto	u100_25
  2238  037C  3001               	movlw	1
  2239  037D  02FD               	subwf	i1___lwmod@counter,f
  2240  037E  1D03               	btfss	3,2
  2241  037F  2B67               	goto	i1l1176
  2242  0380                     i1l1184:	
  2243  0380  087B               	movf	i1___lwmod@dividend+1,w
  2244  0381  01F9               	clrf	?i1___lwmod+1
  2245  0382  07F9               	addwf	?i1___lwmod+1,f
  2246  0383  087A               	movf	i1___lwmod@dividend,w
  2247  0384  01F8               	clrf	?i1___lwmod
  2248  0385  07F8               	addwf	?i1___lwmod,f
  2249  0386  0008               	return
  2250  0387                     __end_ofi1___lwmod:	
  2251                           
  2252                           	psect	text13
  2253  02AA                     __ptext13:	
  2254 ;; *************** function i1___lwdiv *****************
  2255 ;; Defined at:
  2256 ;;		line 6 in file "/opt/microchip/xc8/v1.32/sources/common/lwdiv.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  divisor         2    0[COMMON] unsigned int 
  2259 ;;  dividend        2    2[COMMON] unsigned int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  __lwdiv         2    5[COMMON] unsigned int 
  2262 ;;  __lwdiv         1    7[COMMON] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  2    0[COMMON] unsigned int 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2272 ;;      Params:         4       0       0       0
  2273 ;;      Locals:         3       0       0       0
  2274 ;;      Temps:          1       0       0       0
  2275 ;;      Totals:         8       0       0       0
  2276 ;;Total ram usage:        8 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		i1_printf
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function i1___lwdiv
  2287  02AA                     i1___lwdiv:	
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  2291  02AA  01F5               	clrf	i1___lwdiv@quotient
  2292  02AB  01F6               	clrf	i1___lwdiv@quotient+1
  2293  02AC  0871               	movf	i1___lwdiv@divisor+1,w
  2294  02AD  0470               	iorwf	i1___lwdiv@divisor,w
  2295  02AE  1903               	skipnz
  2296  02AF  2AE1               	goto	i1l1162
  2297  02B0  01F7               	clrf	i1___lwdiv@counter
  2298  02B1  0AF7               	incf	i1___lwdiv@counter,f
  2299  02B2                     i1l1150:	
  2300  02B2  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  2301  02B3  2AC0               	goto	i1l1152
  2302  02B4  3001               	movlw	1
  2303  02B5                     u90_25:	
  2304  02B5  1003               	clrc
  2305  02B6  0DF0               	rlf	i1___lwdiv@divisor,f
  2306  02B7  0DF1               	rlf	i1___lwdiv@divisor+1,f
  2307  02B8  3EFF               	addlw	-1
  2308  02B9  1D03               	skipz
  2309  02BA  2AB5               	goto	u90_25
  2310  02BB  3001               	movlw	1
  2311  02BC  00F4               	movwf	??i1___lwdiv
  2312  02BD  0874               	movf	??i1___lwdiv,w
  2313  02BE  07F7               	addwf	i1___lwdiv@counter,f
  2314  02BF  2AB2               	goto	i1l1150
  2315  02C0                     i1l1152:	
  2316  02C0  3001               	movlw	1
  2317  02C1                     u92_25:	
  2318  02C1  1003               	clrc
  2319  02C2  0DF5               	rlf	i1___lwdiv@quotient,f
  2320  02C3  0DF6               	rlf	i1___lwdiv@quotient+1,f
  2321  02C4  3EFF               	addlw	-1
  2322  02C5  1D03               	skipz
  2323  02C6  2AC1               	goto	u92_25
  2324  02C7  0871               	movf	i1___lwdiv@divisor+1,w
  2325  02C8  0273               	subwf	i1___lwdiv@dividend+1,w
  2326  02C9  1D03               	skipz
  2327  02CA  2ACD               	goto	u93_25
  2328  02CB  0870               	movf	i1___lwdiv@divisor,w
  2329  02CC  0272               	subwf	i1___lwdiv@dividend,w
  2330  02CD                     u93_25:	
  2331  02CD  1C03               	skipc
  2332  02CE  2AD6               	goto	i1l1158
  2333  02CF  0870               	movf	i1___lwdiv@divisor,w
  2334  02D0  02F2               	subwf	i1___lwdiv@dividend,f
  2335  02D1  0871               	movf	i1___lwdiv@divisor+1,w
  2336  02D2  1C03               	skipc
  2337  02D3  03F3               	decf	i1___lwdiv@dividend+1,f
  2338  02D4  02F3               	subwf	i1___lwdiv@dividend+1,f
  2339  02D5  1475               	bsf	i1___lwdiv@quotient,0
  2340  02D6                     i1l1158:	
  2341  02D6  3001               	movlw	1
  2342  02D7                     u94_25:	
  2343  02D7  1003               	clrc
  2344  02D8  0CF1               	rrf	i1___lwdiv@divisor+1,f
  2345  02D9  0CF0               	rrf	i1___lwdiv@divisor,f
  2346  02DA  3EFF               	addlw	-1
  2347  02DB  1D03               	skipz
  2348  02DC  2AD7               	goto	u94_25
  2349  02DD  3001               	movlw	1
  2350  02DE  02F7               	subwf	i1___lwdiv@counter,f
  2351  02DF  1D03               	btfss	3,2
  2352  02E0  2AC0               	goto	i1l1152
  2353  02E1                     i1l1162:	
  2354  02E1  0876               	movf	i1___lwdiv@quotient+1,w
  2355  02E2  01F1               	clrf	?i1___lwdiv+1
  2356  02E3  07F1               	addwf	?i1___lwdiv+1,f
  2357  02E4  0875               	movf	i1___lwdiv@quotient,w
  2358  02E5  01F0               	clrf	?i1___lwdiv
  2359  02E6  07F0               	addwf	?i1___lwdiv,f
  2360  02E7  0008               	return
  2361  02E8                     __end_ofi1___lwdiv:	
  2362                           
  2363                           	psect	text14
  2364  040A                     __ptext14:	
  2365 ;; *************** function i1_buzz_ok *****************
  2366 ;; Defined at:
  2367 ;;		line 162 in file "main.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  buzz_ok         1    1[COMMON] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2381 ;;      Params:         0       0       0       0
  2382 ;;      Locals:         1       0       0       0
  2383 ;;      Temps:          1       0       0       0
  2384 ;;      Totals:         2       0       0       0
  2385 ;;Total ram usage:        2 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_ISR
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function i1_buzz_ok
  2396  040A                     i1_buzz_ok:	
  2397                           
  2398                           ;main.c: 164: unsigned char buzz = 800;
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in i1_buzz_ok: [wreg+status,2+status,0]
  2402  040A  3020               	movlw	32
  2403  040B  00F0               	movwf	??i1_buzz_ok
  2404  040C  0870               	movf	??i1_buzz_ok,w
  2405  040D  00F1               	movwf	i1buzz_ok@buzz
  2406                           
  2407                           ;main.c: 165: TMR0IF = 1;
  2408  040E  150B               	bsf	11,2	;volatile
  2409  040F                     i1l1350:	
  2410                           ;main.c: 166: while(--buzz){
  2411                           
  2412  040F  3001               	movlw	1
  2413  0410  02F1               	subwf	i1buzz_ok@buzz,f
  2414  0411  1903               	btfsc	3,2
  2415  0412  0008               	return
  2416                           
  2417                           ;main.c: 167: RB5 = ~RB5;;
  2418  0413  3020               	movlw	32
  2419  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0416  0686               	xorwf	6,f
  2422                           
  2423                           ;main.c: 168: _delay((unsigned long)((100)*(4000000/4000000.0)));
  2424  0417  3021               	movlw	33
  2425  0418  00F0               	movwf	??i1_buzz_ok
  2426  0419                     u147_27:	
  2427  0419  0BF0               	decfsz	??i1_buzz_ok,f
  2428  041A  2C19               	goto	u147_27
  2429  041B  2C0F               	goto	i1l1350
  2430  041C                     __end_ofi1_buzz_ok:	
  2431                           
  2432                           	psect	text15
  2433  03AE                     __ptext15:	
  2434 ;; *************** function _strcmp *****************
  2435 ;; Defined at:
  2436 ;;		line 33 in file "/opt/microchip/xc8/v1.32/sources/common/strcmp.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  s1              1    wreg     PTR const unsigned char 
  2439 ;;		 -> receive_buffer(5), 
  2440 ;;  s2              1    0[COMMON] PTR const unsigned char 
  2441 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_3(5), 
  2442 ;;		 -> STR_2(5), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  s1              1    5[COMMON] PTR const unsigned char 
  2445 ;;		 -> receive_buffer(5), 
  2446 ;;  r               1    4[COMMON] char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    0[COMMON] int 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2456 ;;      Params:         2       0       0       0
  2457 ;;      Locals:         2       0       0       0
  2458 ;;      Temps:          2       0       0       0
  2459 ;;      Totals:         6       0       0       0
  2460 ;;Total ram usage:        6 bytes
  2461 ;; Hardware stack levels used:    2
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_ISR
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function _strcmp
  2471  03AE                     _strcmp:	
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  2475                           ;strcmp@s1 stored from wreg
  2476  03AE  00F5               	movwf	strcmp@s1
  2477  03AF  2BB8               	goto	i1l1316
  2478  03B0                     i1l1312:	
  2479  03B0  3001               	movlw	1
  2480  03B1  00F2               	movwf	??_strcmp
  2481  03B2  0872               	movf	??_strcmp,w
  2482  03B3  07F5               	addwf	strcmp@s1,f
  2483  03B4  3001               	movlw	1
  2484  03B5  00F2               	movwf	??_strcmp
  2485  03B6  0872               	movf	??_strcmp,w
  2486  03B7  07F0               	addwf	strcmp@s2,f
  2487  03B8                     i1l1316:	
  2488  03B8  0875               	movf	strcmp@s1,w
  2489  03B9  0084               	movwf	4
  2490  03BA  1383               	bcf	3,7	;select IRP bank0
  2491  03BB  0800               	movf	0,w
  2492  03BC  00F2               	movwf	??_strcmp
  2493  03BD  0870               	movf	strcmp@s2,w
  2494  03BE  0084               	movwf	4
  2495  03BF  2228               	fcall	stringdir
  2496  03C0  3AFF               	xorlw	255
  2497  03C1  3E01               	addlw	1
  2498  03C2  0772               	addwf	??_strcmp,w
  2499  03C3  00F3               	movwf	??_strcmp+1
  2500  03C4  0873               	movf	??_strcmp+1,w
  2501  03C5  00F4               	movwf	strcmp@r
  2502  03C6  08F4               	movf	strcmp@r,f
  2503  03C7  1D03               	skipz
  2504  03C8  2BCE               	goto	i1l1320
  2505  03C9  0875               	movf	strcmp@s1,w
  2506  03CA  0084               	movwf	4
  2507  03CB  0880               	movf	0,f
  2508  03CC  1D03               	skipz
  2509  03CD  2BB0               	goto	i1l1312
  2510  03CE                     i1l1320:	
  2511  03CE  0874               	movf	strcmp@r,w
  2512  03CF  00F0               	movwf	?_strcmp
  2513  03D0  01F1               	clrf	?_strcmp+1
  2514  03D1  1BF0               	btfsc	?_strcmp,7
  2515  03D2  03F1               	decf	?_strcmp+1,f
  2516  03D3  0008               	return
  2517  03D4                     __end_of_strcmp:	
  2518                           
  2519                           	psect	text16
  2520  0387                     __ptext16:	
  2521 ;; *************** function _set_portAbit *****************
  2522 ;; Defined at:
  2523 ;;		line 193 in file "main.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  bt              1    wreg     unsigned char 
  2526 ;;  val             1    0[COMMON] unsigned char 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  bt              1    3[COMMON] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2538 ;;      Params:         1       0       0       0
  2539 ;;      Locals:         1       0       0       0
  2540 ;;      Temps:          2       0       0       0
  2541 ;;      Totals:         4       0       0       0
  2542 ;;Total ram usage:        4 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_ISR
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _set_portAbit
  2553  0387                     _set_portAbit:	
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in _set_portAbit: [wreg+status,2+status,0]
  2557                           ;set_portAbit@bt stored from wreg
  2558  0387  00F3               	movwf	set_portAbit@bt
  2559                           
  2560                           ;main.c: 195: val ? ( sPORTA |= 1 << bt ) : ( sPORTA &= ~(1 << bt) );
  2561  0388  0870               	movf	set_portAbit@val,w
  2562  0389  1903               	btfsc	3,2
  2563  038A  2B9B               	goto	i1l1328
  2564  038B  3001               	movlw	1
  2565  038C  00F1               	movwf	??_set_portAbit
  2566  038D  0A73               	incf	set_portAbit@bt,w
  2567  038E  2B91               	goto	u119_24
  2568  038F                     u119_25:	
  2569  038F  1003               	clrc
  2570  0390  0DF1               	rlf	??_set_portAbit,f
  2571  0391                     u119_24:	
  2572  0391  3EFF               	addlw	-1
  2573  0392  1D03               	skipz
  2574  0393  2B8F               	goto	u119_25
  2575  0394  0871               	movf	??_set_portAbit,w
  2576  0395  00F2               	movwf	??_set_portAbit+1
  2577  0396  0872               	movf	??_set_portAbit+1,w
  2578  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0399  04D0               	iorwf	_sPORTA,f
  2581  039A  2BAB               	goto	i1l1330
  2582  039B                     i1l1328:	
  2583  039B  3001               	movlw	1
  2584  039C  00F1               	movwf	??_set_portAbit
  2585  039D  0A73               	incf	set_portAbit@bt,w
  2586  039E  2BA1               	goto	u120_24
  2587  039F                     u120_25:	
  2588  039F  1003               	clrc
  2589  03A0  0DF1               	rlf	??_set_portAbit,f
  2590  03A1                     u120_24:	
  2591  03A1  3EFF               	addlw	-1
  2592  03A2  1D03               	skipz
  2593  03A3  2B9F               	goto	u120_25
  2594  03A4  0871               	movf	??_set_portAbit,w
  2595  03A5  3AFF               	xorlw	255
  2596  03A6  00F2               	movwf	??_set_portAbit+1
  2597  03A7  0872               	movf	??_set_portAbit+1,w
  2598  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2599  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2600  03AA  05D0               	andwf	_sPORTA,f
  2601  03AB                     i1l1330:	
  2602                           
  2603                           ;main.c: 196: PORTA = sPORTA;
  2604  03AB  0850               	movf	_sPORTA,w
  2605  03AC  0085               	movwf	5	;volatile
  2606  03AD  0008               	return
  2607  03AE                     __end_of_set_portAbit:	
  2608                           
  2609                           	psect	text17
  2610  041C                     __ptext17:	
  2611 ;; *************** function _isalpha *****************
  2612 ;; Defined at:
  2613 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/isalpha.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  c               1    wreg     unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  c               1    3[COMMON] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;		None               void
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2627 ;;      Params:         0       0       0       0
  2628 ;;      Locals:         2       0       0       0
  2629 ;;      Temps:          0       0       0       0
  2630 ;;      Totals:         2       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    1
  2634 ;; This function calls:
  2635 ;;		_isupper
  2636 ;; This function is called by:
  2637 ;;		_ISR
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           
  2641                           
  2642                           ;psect for function _isalpha
  2643  041C                     _isalpha:	
  2644                           
  2645                           ;incstack = 0
  2646                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
  2647                           ;isalpha@c stored from wreg
  2648  041C  00F3               	movwf	isalpha@c
  2649  041D  01F2               	clrf	_isalpha$342
  2650  041E  0AF2               	incf	_isalpha$342,f
  2651  041F  307B               	movlw	123
  2652  0420  0273               	subwf	isalpha@c,w
  2653  0421  1803               	skipnc
  2654  0422  2C27               	goto	i1l1302
  2655  0423  3061               	movlw	97
  2656  0424  0273               	subwf	isalpha@c,w
  2657  0425  1803               	skipnc
  2658  0426  2C2B               	goto	i1l1306
  2659  0427                     i1l1302:	
  2660  0427  0873               	movf	isalpha@c,w
  2661  0428  242D               	fcall	_isupper
  2662  0429  1C03               	btfss	3,0
  2663  042A  01F2               	clrf	_isalpha$342
  2664  042B                     i1l1306:	
  2665  042B  0C72               	rrf	_isalpha$342,w
  2666  042C  0008               	return
  2667  042D                     __end_of_isalpha:	
  2668                           
  2669                           	psect	text18
  2670  042D                     __ptext18:	
  2671 ;; *************** function _isupper *****************
  2672 ;; Defined at:
  2673 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/isupper.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  c               1    wreg     unsigned char 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  c               1    1[COMMON] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;		None               void
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2687 ;;      Params:         0       0       0       0
  2688 ;;      Locals:         2       0       0       0
  2689 ;;      Temps:          0       0       0       0
  2690 ;;      Totals:         2       0       0       0
  2691 ;;Total ram usage:        2 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_isalpha
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function _isupper
  2702  042D                     _isupper:	
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _isupper: [wreg+status,2+status,0]
  2706                           ;isupper@c stored from wreg
  2707  042D  00F1               	movwf	isupper@c
  2708  042E  01F0               	clrf	_isupper$345
  2709  042F  305B               	movlw	91
  2710  0430  0271               	subwf	isupper@c,w
  2711  0431  1803               	skipnc
  2712  0432  2C39               	goto	i1l1086
  2713  0433  3041               	movlw	65
  2714  0434  0271               	subwf	isupper@c,w
  2715  0435  1C03               	skipc
  2716  0436  2C39               	goto	i1l1086
  2717  0437  01F0               	clrf	_isupper$345
  2718  0438  0AF0               	incf	_isupper$345,f
  2719  0439                     i1l1086:	
  2720  0439  0C70               	rrf	_isupper$345,w
  2721  043A  0008               	return
  2722  043B                     __end_of_isupper:	
  2723                           
  2724                           	psect	text19
  2725  031E                     __ptext19:	
  2726 ;; *************** function _buzz_error *****************
  2727 ;; Defined at:
  2728 ;;		line 172 in file "main.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  buzz            1    2[COMMON] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2742 ;;      Params:         0       0       0       0
  2743 ;;      Locals:         1       0       0       0
  2744 ;;      Temps:          2       0       0       0
  2745 ;;      Totals:         3       0       0       0
  2746 ;;Total ram usage:        3 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_ISR
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           
  2756                           ;psect for function _buzz_error
  2757  031E                     _buzz_error:	
  2758                           
  2759                           ;main.c: 174: unsigned char buzz = 20;
  2760                           
  2761                           ;incstack = 0
  2762                           ; Regs used in _buzz_error: [wreg+status,2+status,0]
  2763  031E  3014               	movlw	20
  2764  031F  00F0               	movwf	??_buzz_error
  2765  0320  0870               	movf	??_buzz_error,w
  2766  0321  00F2               	movwf	buzz_error@buzz
  2767  0322                     i1l1336:	
  2768                           ;main.c: 175: while(--buzz){
  2769                           
  2770  0322  3001               	movlw	1
  2771  0323  02F2               	subwf	buzz_error@buzz,f
  2772  0324  1903               	btfsc	3,2
  2773  0325  2B34               	goto	i1l1338
  2774                           
  2775                           ;main.c: 176: RB5 = ~RB5;;
  2776  0326  3020               	movlw	32
  2777  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2779  0329  0686               	xorwf	6,f
  2780                           
  2781                           ;main.c: 177: _delay((unsigned long)((4)*(4000000/4000.0)));
  2782  032A  3006               	movlw	6
  2783  032B  00F1               	movwf	??_buzz_error+1
  2784  032C  3030               	movlw	48
  2785  032D  00F0               	movwf	??_buzz_error
  2786  032E                     u148_27:	
  2787  032E  0BF0               	decfsz	??_buzz_error,f
  2788  032F  2B2E               	goto	u148_27
  2789  0330  0BF1               	decfsz	??_buzz_error+1,f
  2790  0331  2B2E               	goto	u148_27
  2791  0332  0000               	nop
  2792  0333  2B22               	goto	i1l1336
  2793  0334                     i1l1338:	
  2794                           
  2795                           ;main.c: 178: }
  2796                           ;main.c: 179: _delay((unsigned long)((100)*(4000000/4000.0)));
  2797  0334  3082               	movlw	130
  2798  0335  00F1               	movwf	??_buzz_error+1
  2799  0336  30DD               	movlw	221
  2800  0337  00F0               	movwf	??_buzz_error
  2801  0338                     u149_27:	
  2802  0338  0BF0               	decfsz	??_buzz_error,f
  2803  0339  2B38               	goto	u149_27
  2804  033A  0BF1               	decfsz	??_buzz_error+1,f
  2805  033B  2B38               	goto	u149_27
  2806  033C  2B3D               	nop2
  2807                           
  2808                           ;main.c: 180: buzz = 80;
  2809  033D  3050               	movlw	80
  2810  033E  00F0               	movwf	??_buzz_error
  2811  033F  0870               	movf	??_buzz_error,w
  2812  0340  00F2               	movwf	buzz_error@buzz
  2813  0341                     i1l1342:	
  2814                           ;main.c: 181: while(--buzz){
  2815                           
  2816  0341  3001               	movlw	1
  2817  0342  02F2               	subwf	buzz_error@buzz,f
  2818  0343  1903               	btfsc	3,2
  2819  0344  0008               	return
  2820                           
  2821                           ;main.c: 182: RB5 = ~RB5;;
  2822  0345  3020               	movlw	32
  2823  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0348  0686               	xorwf	6,f
  2826                           
  2827                           ;main.c: 183: _delay((unsigned long)((4)*(4000000/4000.0)));
  2828  0349  3006               	movlw	6
  2829  034A  00F1               	movwf	??_buzz_error+1
  2830  034B  3030               	movlw	48
  2831  034C  00F0               	movwf	??_buzz_error
  2832  034D                     u150_27:	
  2833  034D  0BF0               	decfsz	??_buzz_error,f
  2834  034E  2B4D               	goto	u150_27
  2835  034F  0BF1               	decfsz	??_buzz_error+1,f
  2836  0350  2B4D               	goto	u150_27
  2837  0351  0000               	nop
  2838  0352  2B41               	goto	i1l1342
  2839  0353                     __end_of_buzz_error:	
  2840                           
  2841                           	psect	text20
  2842  043B                     __ptext20:	
  2843 ;; *************** function _USART_getc *****************
  2844 ;; Defined at:
  2845 ;;		line 149 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      unsigned char 
  2852 ;; Registers used:
  2853 ;;		wreg
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2859 ;;      Params:         0       0       0       0
  2860 ;;      Locals:         0       0       0       0
  2861 ;;      Temps:          0       0       0       0
  2862 ;;      Totals:         0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_ISR
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _USART_getc
  2874  043B                     _USART_getc:	
  2875                           
  2876                           ;main.c: 151: if(OERR) {
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _USART_getc: [wreg]
  2880  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2881  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2882  043D  1C98               	btfss	24,1	;volatile
  2883  043E  2C41               	goto	i1l119
  2884                           
  2885                           ;main.c: 152: CREN = 0;
  2886  043F  1218               	bcf	24,4	;volatile
  2887                           
  2888                           ;main.c: 153: CREN = 1;
  2889  0440  1618               	bsf	24,4	;volatile
  2890  0441                     i1l119:	
  2891                           ;main.c: 154: }
  2892                           ;main.c: 156: while(!RCIF);
  2893                           
  2894  0441  1E8C               	btfss	12,5	;volatile
  2895  0442  2C41               	goto	i1l119
  2896                           
  2897                           ;main.c: 158: return RCREG;
  2898  0443  081A               	movf	26,w	;volatile
  2899  0444  0008               	return
  2900  0445                     __end_of_USART_getc:	
  2901  007E                     btemp	set	126	;btemp
  2902  007E                     wtemp	set	126
  2903  007E                     wtemp0	set	126
  2904  0080                     wtemp1	set	128
  2905  0082                     wtemp2	set	130
  2906  0084                     wtemp3	set	132
  2907  0086                     wtemp4	set	134
  2908  0088                     wtemp5	set	136
  2909  007F                     wtemp6	set	127
  2910  007E                     ttemp	set	126
  2911  007E                     ttemp0	set	126
  2912  0081                     ttemp1	set	129
  2913  0084                     ttemp2	set	132
  2914  0087                     ttemp3	set	135
  2915  007F                     ttemp4	set	127
  2916  007E                     ltemp	set	126
  2917  007E                     ltemp0	set	126
  2918  0082                     ltemp1	set	130
  2919  0086                     ltemp2	set	134
  2920  0080                     ltemp3	set	128


Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      54
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> receive_buffer(BANK0[5]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_8(CODE[5]), STR_4(CODE[12]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?i1_printf(BANK0[2]), ?_printf(COMMON[2]), 

    S140$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    i1_printf->i1___lwmod
    i1_putch->i1_USART_putc
    i1___lwmod->i1___lwdiv
    _isalpha->_isupper

Critical Paths under _main in BANK0

    _main->_printf
    _printf->___lwmod
    _putch->_USART_putc
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    _ISR->i1_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1067
                         _BOARD_init
                            _buzz_ok
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12    12      0    1044
                                             35 BANK0     12    12      0
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                             22 BANK0      1     1      0
                         _USART_putc
 ---------------------------------------------------------------------------------
 (3) _USART_putc                                           1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                             29 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                             21 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _buzz_ok                                              2     2      0      23
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _BOARD_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  8     8      0    1971
                                             13 BANK0      8     8      0
                         _USART_getc
                         _buzz_error
                            _isalpha
                       _set_portAbit
                             _strcmp
                          i1_buzz_ok
                           i1_printf
 ---------------------------------------------------------------------------------
 (5) i1_printf                                            13    12      1     855
                                              0 BANK0     13    12      1
                          i1___lwdiv
                          i1___lwmod
                            i1_putch
 ---------------------------------------------------------------------------------
 (6) i1_putch                                              1     1      0      44
                                              1 COMMON     1     1      0
                       i1_USART_putc
 ---------------------------------------------------------------------------------
 (7) i1_USART_putc                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) i1___lwmod                                            6     2      4     211
                                              8 COMMON     6     2      4
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) i1_buzz_ok                                            2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _strcmp                                               6     4      2     491
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _set_portAbit                                         4     3      1     331
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     2      0     158
                                              2 COMMON     2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _buzz_error                                           3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USART_getc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BOARD_init
   _buzz_ok
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _USART_putc

 _ISR (ROOT)
   _USART_getc
   _buzz_error
   _isalpha
     _isupper
   _set_portAbit
   _strcmp
   i1_buzz_ok
   i1_printf
     i1___lwdiv
     i1___lwmod
       i1___lwdiv (ARG)
     i1_putch
       i1_USART_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     2F      36       3       67.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      44       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      44      10        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Aug 16 22:11:47 2014

             _USART_putc 0445                        pc 0002              __CFG_CP$OFF 0000  
                     l87 045F                       fsr 0004                      l112 0448  
                    l177 0185                      _GIE 005F                      _RA0 0028  
                    _RA3 002B                      _RB5 0035             __CFG_CPD$OFF 0000  
                    _ISR 001A                      u805 028F                      u815 0299  
                    u845 02F3                      u775 0277                      u865 0304  
                    _RX9 00C6                      u795 0283                      u875 030D  
                    _TX9 04C6                      fsr0 0004                      indf 0000  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     ISR@b 0034  
                   ISR@i 004F                     l1100 0274                     l1102 0282  
                   l1112 02A3                     l1130 030C                     l1108 0298  
                   l1124 02F0                     l1126 02FE                     l1134 0317  
                   l1244 0112                     l1270 014E                     l1254 0129  
                   l1238 00FE                     l1266 0148                     l1258 012F  
                   l1276 0154                     l1286 03FD                     l1278 00E9  
                   STR_1 0244                     STR_2 025B                     STR_3 0265  
                   STR_4 0238                     STR_5 0251                     STR_6 0256  
                   STR_7 0260                     STR_8 024C                     _BRGH 04C2  
                   _CREN 00C4                     u1055 013E                     u1437 0407  
                   _PEIE 005E                     _RCIE 0465                     _RCIF 0065  
                   _OERR 00C1                     _SPEN 00C7                     _SREN 00C5  
                   _TXIE 0464                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4      __size_of_BOARD_init 0022                     _main 045B  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0010                     ttemp 007E                     wtemp 007E  
        __end_ofi1_putch 0464            __CFG_MCLRE$ON 0000                    ??_ISR 002D  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___lwdiv 02AA  
                  i1l112 044E                    i1l109 00D7                    i1l119 0441  
                  i1l177 0227          __end_of___lwmod 031E                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    u90_25 02B5  
                  u92_25 02C1                    u93_25 02CD                    u94_25 02D7  
                  _TXREG 0019                    u97_25 035C                    u99_25 036D  
          __CFG_PWRTE$ON 0000       i1___lwmod@dividend 007A          __end_of_dpowers 0238  
        __end_of_isalpha 042D          __end_of_buzz_ok 040A                    _putch 0455  
        __end_of_isupper 043B                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F       __size_ofi1___lwdiv 003E       __size_ofi1___lwmod 0034  
       __end_ofi1_printf 0228               i1printf@ap 0025              ?_USART_getc 0070  
        __initialization 0011              ?_USART_putc 0070             __end_of_main 0460  
     __size_ofi1_buzz_ok 0012                   ??_main 004F                   ?_putch 0070  
                 u100_25 0376                   i1l1302 0427                   i1l1150 02B2  
                 i1l1320 03CE                   i1l1312 03B0                   i1l1152 02C0  
                 i1l1306 042B                   i1l1330 03AB                   i1l1162 02E1  
                 i1l1316 03B8                   i1l1180 0375                   i1l1342 0341  
                 i1l1086 0439                   i1l1350 040F                   i1l1158 02D6  
                 i1l1174 0359                   i1l1336 0322                   i1l1328 039B  
                 i1l1176 0367                   i1l1184 0380                   i1l1440 0079  
                 i1l1432 0061                   i1l1424 004D                   i1l1338 0334  
                 i1l1450 00B1                   i1l1418 0038                   u120_24 03A1  
                 i1l1364 01B6                   i1l1460 00CE                   u120_25 039F  
                 i1l1390 01F2                   i1l1374 01CD                   i1l1358 01A2  
                 i1l1454 00BE                   i1l1446 00A2                   i1l1386 01EC  
                 i1l1378 01D3                   i1l1458 00CB                   i1l1396 01F8  
                 i1l1398 018D                   u150_27 034D                   u119_24 0391  
                 u119_25 038F                   u127_25 01E2                   u144_27 0072  
                 u145_27 0085                   u146_27 0098                   u147_27 0419  
                 u148_27 032E                   u149_27 0338                ??i1_putch 0071  
                 _TMR0IF 005A                   _TRISA0 0428                   _TRISA1 0429  
                 _TRISA2 042A                   _TRISB1 0431                   _TRISA3 042B  
                 _TRISB2 0432                   _TRISB3 0433                   _TRISB5 0435  
         buzz_error@buzz 0072                   _sPORTA 0050                ??___lwdiv 0039  
              ??___lwmod 0041             ??_BOARD_init 0035                   _printf 00E2  
                 _strcmp 03AE        __end_ofi1___lwdiv 02E8                ??_isalpha 0072  
      __end_ofi1___lwmod 0387                ??_buzz_ok 0035                   saved_w 007E  
              ??_isupper 0070      __size_of_USART_getc 000A      __size_of_USART_putc 0008  
      __end_ofi1_buzz_ok 041C  __end_of__initialization 0018       __end_of_BOARD_init 03F6  
        set_portAbit@val 0070              buzz_ok@buzz 0036           __pcstackCOMMON 0070  
            i1putch@byte 0071            __end_of_putch 045B                ?i1_printf 0020  
          ?i1_USART_putc 0070                  ??_putch 0036               __pbssBANK0 004F  
             __pmaintext 045B               __pintentry 0004                  ?_printf 0070  
                ?_strcmp 0070           ??i1_USART_putc 0070               ??i1_printf 0021  
             __stringtab 0228                  i1_putch 0460             ??_USART_getc 0070  
           ??_USART_putc 0035                  ___lwdiv 026A                  ___lwmod 02E8  
          ?_set_portAbit 0070                  __ptext1 00E2                  __ptext2 0455  
                __ptext3 0445                  __ptext4 02E8                  __ptext5 026A  
                __ptext6 03F6                  __ptext7 03D4                  __ptext8 001A  
                __ptext9 0186          __size_of_printf 00A4          __size_of_strcmp 0026  
           __size_of_ISR 00C8                  _dpowers 022E        i1___lwdiv@divisor 0070  
             _buzz_error 031E                  _isalpha 041C        i1___lwdiv@counter 0077  
                _buzz_ok 03F6                  _isupper 042D       __end_of_USART_getc 0445  
     __end_of_USART_putc 044D     end_of_initialization 0018                  printf@c 004E  
                printf@f 0049                  strcmp@r 0074           ??_set_portAbit 0071  
              i1___lwdiv 02AA                i1___lwmod 0353                i1_buzz_ok 040A  
           i1printf@_val 0028             i1printf@flag 0026             i1printf@prec 0027  
   __end_ofi1_USART_putc 0455        i1___lwmod@divisor 0078        i1___lwmod@counter 007D  
         __end_of_printf 0186              ?_buzz_error 0070           __end_of_strcmp 03D4  
    start_initialization 0011              __end_of_ISR 00E2                i1printf@c 002C  
              i1printf@f 0024               ?i1___lwdiv 0070               ?i1___lwmod 0078  
      __size_ofi1_printf 00A2               ?i1_buzz_ok 0070           USART_putc@Byte 0035  
               ??_printf 0043                 ??_strcmp 0072                ___latbits 0000  
          __pcstackBANK0 0020           set_portAbit@bt 0073      __end_of__stringdata 026A  
               ?i1_putch 0070     __end_of_set_portAbit 03AE      __size_of_buzz_error 0035  
       ___lwdiv@dividend 0037                 ?___lwdiv 0035                 ?___lwmod 003D  
              __pstrings 0228                 ?_isalpha 0070                 ?_buzz_ok 0070  
               ?_isupper 0070         ___lwdiv@quotient 003A              ??i1___lwdiv 0074  
            ??i1___lwmod 007C           __size_of_putch 0006        interrupt_function 0004  
  __size_ofi1_USART_putc 0008              ??i1_buzz_ok 0070              __stringbase 022D  
            __stringdata 0238               printf@_val 004A               printf@flag 0047  
             printf@prec 0048                 i1_printf 0186             i1_USART_putc 044D  
       __size_ofi1_putch 0004            i1buzz_ok@buzz 0071         __size_of___lwdiv 0040  
             _BOARD_init 03D4         __size_of___lwmod 0036              _isalpha$342 0072  
     __end_of__stringtab 022E             ??_buzz_error 0070         __size_of_isalpha 0011  
       __size_of_buzz_ok 0014          ___lwdiv@divisor 0035          ___lwdiv@counter 003C  
               __ptext10 0460                 __ptext11 044D                 __ptext20 043B  
               __ptext12 0353                 __ptext13 02AA                 __ptext14 040A  
               __ptext15 03AE                 __ptext16 0387                 __ptext17 041C  
               __ptext18 042D                 __ptext19 031E    __size_of_set_portAbit 0027  
       __size_of_isupper 000E       i1___lwdiv@dividend 0072            __size_of_main 0005  
     __end_of_buzz_error 0353           _receive_buffer 0051             _set_portAbit 0387  
     i1___lwdiv@quotient 0075                putch@byte 0036         i1USART_putc@Byte 0070  
               isalpha@c 0073                 intlevel1 0000              _isupper$345 0070  
       ___lwmod@dividend 003F                 isupper@c 0071                stringcode 0228  
               printf@ap 0046              ?_BOARD_init 0070                 strcmp@s1 0075  
               strcmp@s2 0070          ___lwmod@divisor 003D          ___lwmod@counter 0042  
               stringdir 0228                 stringtab 0228       __CFG_FOSC$INTOSCIO 0000  
             _USART_getc 043B  
